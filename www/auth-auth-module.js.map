{"version":3,"sources":["webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/auth.page.html","webpack:///./src/app/auth/auth.page.scss","webpack:///./src/app/auth/auth.page.ts","webpack:///./src/app/auth/forget/forget.page.html","webpack:///./src/app/auth/forget/forget.page.scss","webpack:///./src/app/auth/forget/forget.page.ts","webpack:///./src/app/auth/login/login.page.html","webpack:///./src/app/auth/login/login.page.scss","webpack:///./src/app/auth/login/login.page.ts","webpack:///./src/app/auth/register/register.page.html","webpack:///./src/app/auth/register/register.page.scss","webpack:///./src/app/auth/register/register.page.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthPage } from './auth.page';\nimport { LoginPage } from './login/login.page';\nimport { RegisterPage } from './register/register.page';\nimport { ForgetPage } from './forget/forget.page';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AuthPage,\n        children: [\n            { path: 'login/:type', component: LoginPage },\n            { path: 'register/:type', component: RegisterPage },\n            { path: 'forget/:type', component: ForgetPage },\n        ]\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        IonicModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [AuthPage, LoginPage, RegisterPage, ForgetPage]\n})\nexport class AuthPageModule { }\n","module.exports = \"<ion-router-outlet></ion-router-outlet>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2F1dGgvYXV0aC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-auth',\n    templateUrl: './auth.page.html',\n    styleUrls: ['./auth.page.scss'],\n})\nexport class AuthPage implements OnInit {\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"dark\\\">\\n        <ion-title></ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding color=\\\"dark\\\">\\n    <ion-img src=\\\"assets/veriprof-logo.png\\\"></ion-img>\\n    <br>\\n    <h2 style=\\\"margin:0px;\\\">Forgot Password</h2>\\n    <br>\\n    <br>\\n    <br>\\n    <ion-item color=\\\"medium\\\">\\n        <ion-label position=\\\"floating\\\" color=\\\"medium\\\" class=\\\"inner\\\">Email</ion-label>\\n        <ion-input name=\\\"email\\\" class=\\\"inner\\\" [(ngModel)]=\\\"user_email\\\"></ion-input>\\n    </ion-item>\\n    <ion-button class=\\\"submit-btn\\\" color=\\\"dark\\\" (click)='sendPass()'>Verify by Eamil </ion-button>\\n    <br>\\n    <p class=\\\"go-to-login\\\" style=\\\"margin-top:5px;\\\">Remember password?<a (click)=\\\"goLoginPage()\\\"\\n            style=\\\"color:#DC143C;\\\">Try to Log In.</a></p>\\n</ion-content>\\n<ion-footer color=\\\"dark\\\" class=\\\"footer\\\">\\n    <ion-toolbar color=\\\"dark\\\">\\n        <ion-title class=\\\"footer\\\">Copyright SIVAGO </ion-title>\\n    </ion-toolbar>\\n</ion-footer>\"","module.exports = \".footer {\\n  font-size: 11px;\\n  color: #a8a7a7; }\\n\\n.inner {\\n  font-size: 13px;\\n  color: #a8a7a7; }\\n\\na {\\n  color: #810909; }\\n\\nh2 {\\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\\n  color: #a8a7a7;\\n  text-align: center; }\\n\\nlink {\\n  font-size: 13px;\\n  color: #a8a7a7;\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9mb3JnZXQvRzpcXGlvbmljXFxpb25pY19hcHBcXHZlcmlwcm9mLWFwcC9zcmNcXGFwcFxcYXV0aFxcZm9yZ2V0XFxmb3JnZXQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBZTtFQUNmLGNBQXlCLEVBQUE7O0FBR3pCO0VBQ0ksZUFBZTtFQUNmLGNBQXlCLEVBQUE7O0FBR3pCO0VBQ0ksY0FBcUIsRUFBQTs7QUFHekI7RUFDSSxnREFBZ0Q7RUFFaEQsY0FBeUI7RUFDekIsa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0ksZUFBZTtFQUNmLGNBQXlCO0VBQ3pCLGtCQUFrQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9mb3JnZXQvZm9yZ2V0LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb290ZXIge1xuICAgIGZvbnQtc2l6ZTogMTFweDtcbiAgICBjb2xvcjogcmdiKDE2OCwgMTY3LCAxNjcpO1xuICAgIH1cbiAgICBcbiAgICAuaW5uZXIge1xuICAgICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgICAgIGNvbG9yOiByZ2IoMTY4LCAxNjcsIDE2Nyk7XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgYSB7XG4gICAgICAgICAgICBjb2xvcjogcmdiKDEyOSwgOSwgOSk7XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgaDIge1xuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFZlcmRhbmEsIEdlbmV2YSwgVGFob21hLCBzYW5zLXNlcmlmO1xuICAgICAgICAgICAgLy8gZm9udC1mYW1pbHk6IENhbWJyaWEsIENvY2hpbiwgR2VvcmdpYSwgVGltZXMsICdUaW1lcyBOZXcgUm9tYW4nLCBzZXJpZjtcbiAgICAgICAgICAgIGNvbG9yOiByZ2IoMTY4LCAxNjcsIDE2Nyk7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgbGluayB7XG4gICAgICAgICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgICAgICAgICBjb2xvcjogcmdiKDE2OCwgMTY3LCAxNjcpO1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICB9Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from 'src/app/services/rest-api.service';\nimport { NavController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n    selector: 'app-forget',\n    templateUrl: './forget.page.html',\n    styleUrls: ['./forget.page.scss'],\n})\nexport class ForgetPage implements OnInit {\n\n    user_email: string = '';\n\n    currentUserType = 'public_user';\n\n    UserTypes = {\n        'public_user': {\n            title: 'Member Area'\n        },\n        'accessor': {\n            title: 'Accessor'\n        },\n        'professional': {\n            title: 'Professional'\n        }\n    };\n\n    constructor(\n        public toastController: ToastController,\n        private navCtrl: NavController,\n        public restApi: RestApiService,\n        private router: Router) {\n        this.currentUserType = this.router.url.split('/').pop();\n    }\n\n    ngOnInit() {\n    }\n\n    sendPass() {\n        if (this.user_email.length == 0) {\n            this.restApi.toast('Please fill your eamil into Email', 1200);\n        }\n        else {\n            this.restApi.post('/forget', { email: this.user_email }).subscribe((res: any) => {\n                if (res && res.status) {\n                    this.restApi.toast(res.message, 1000);\n                }\n            }, error => {\n                this.restApi.toast('Something went wrong.', 1200);\n            });\n        }\n    }\n\n    goLoginPage() {\n        this.router.navigateByUrl('auth/login/' + this.currentUserType);\n    }\n}","module.exports = \"<ion-header color=\\\"dark\\\" style=\\\"background: black;height: 40%;\\\">\\n    <ion-content color=\\\"dark\\\">\\n        <ion-img src=\\\"assets/veriprof-logo.png\\\" style=\\\"margin-top: 10%;\\\"></ion-img>\\n        <h2>{{UserTypes[currentUserType].title}}</h2>\\n    </ion-content>\\n</ion-header>\\n\\n<ion-content color=\\\"dark\\\" class=\\\"centerMargin\\\">\\n    <form class=\\\"form\\\" [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"loginUser(validations_form.value)\\\" color=\\\"dark\\\">\\n        <ion-item color=\\\"dark\\\">\\n            <ion-label position=\\\"floating\\\" color=\\\"dark\\\" class=\\\"inner\\\">Email</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"email\\\" color=\\\"dark\\\" class=\\\"inner\\\"></ion-input>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\" color=\\\"dark\\\" class=\\\"inner\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n                <div class=\\\"error-message\\\"\\n                    *ngIf=\\\"validations_form.get('email').hasError(validation.type) && (validations_form.get('email').dirty || validations_form.get('email').touched)\\\"\\n                    color=\\\"dark\\\" class=\\\"inner\\\">\\n                    {{ validation.message }}\\n                </div>\\n            </ng-container>\\n        </div>\\n\\n        <ion-item color=\\\"dark\\\">\\n            <ion-label position=\\\"floating\\\" color=\\\"dark\\\" class=\\\"inner\\\">Password</ion-label>\\n            <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-controll\\\" required color=\\\"dark\\\"\\n                class=\\\"inner\\\"></ion-input>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\" color=\\\"dark\\\" class=\\\"inner\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.password\\\" color=\\\"dark\\\" class=\\\"inner\\\">\\n                <div class=\\\"error-message\\\"\\n                    *ngIf=\\\"validations_form.get('password').hasError(validation.type) && (validations_form.get('password').dirty || validations_form.get('password').touched)\\\"\\n                    color=\\\"dark\\\" class=\\\"inner\\\">\\n                    {{ validation.message }}\\n                </div>\\n            </ng-container>\\n        </div>\\n        <ion-button class=\\\"submit-btn\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\" color=\\\"dark\\\">Log In\\n        </ion-button>\\n        <label class=\\\"error-message\\\">{{errorMessage}}</label>\\n    </form>\\n    <ion-row class=\\\"centerMargin\\\" style=\\\"margin:5%\\\">\\n        <a (click)=\\\"goToRegisterPage()\\\" color=\\\"danger\\\" style=\\\"color:#DC143C;width: 48%;\\\">\\n            <p>Create an account</p>\\n        </a>\\n        <a (click)=\\\"goToForgetPage()\\\" color=\\\"danger\\\" style=\\\"color:#DC143C;width: 48%;\\\">\\n            <p>Forgot Passowrd</p>\\n        </a>\\n    </ion-row>\\n</ion-content>\\n<ion-footer color=\\\"dark\\\" class=\\\"footer\\\">\\n    <ion-toolbar color=\\\"dark\\\">\\n        <ion-title class=\\\"footer\\\">Copyright SIVAGO </ion-title>\\n    </ion-toolbar>\\n</ion-footer>\"","module.exports = \".footer {\\n  font-size: 11px;\\n  color: #a8a7a7; }\\n\\n.inner {\\n  font-size: 13px;\\n  color: #a8a7a7; }\\n\\na {\\n  color: #810909; }\\n\\nh2 {\\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\\n  color: #a8a7a7;\\n  text-align: center; }\\n\\nlink {\\n  font-size: 13px;\\n  color: #a8a7a7;\\n  text-align: center; }\\n\\n.centerMargin {\\n  --padding-start: 5% !important;\\n  --padding-end: 5% !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9sb2dpbi9HOlxcaW9uaWNcXGlvbmljX2FwcFxcdmVyaXByb2YtYXBwL3NyY1xcYXBwXFxhdXRoXFxsb2dpblxcbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0EsZUFBZTtFQUNmLGNBQXlCLEVBQUE7O0FBR3pCO0VBQ0ksZUFBZTtFQUNmLGNBQXlCLEVBQUE7O0FBR3pCO0VBQ0ksY0FBcUIsRUFBQTs7QUFHekI7RUFDSSxnREFBZ0Q7RUFDaEQsY0FBeUI7RUFDekIsa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0ksZUFBZTtFQUNmLGNBQXlCO0VBQ3pCLGtCQUFrQixFQUFBOztBQUcxQjtFQUNJLDhCQUFnQjtFQUNoQiw0QkFBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9vdGVyIHtcbmZvbnQtc2l6ZTogMTFweDtcbmNvbG9yOiByZ2IoMTY4LCAxNjcsIDE2Nyk7XG59XG5cbi5pbm5lciB7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIGNvbG9yOiByZ2IoMTY4LCAxNjcsIDE2Nyk7XG4gICAgfVxuXG4gICAgYSB7XG4gICAgICAgIGNvbG9yOiByZ2IoMTI5LCA5LCA5KTtcbiAgICB9XG5cbiAgICBoMiB7XG4gICAgICAgIGZvbnQtZmFtaWx5OiBWZXJkYW5hLCBHZW5ldmEsIFRhaG9tYSwgc2Fucy1zZXJpZjtcbiAgICAgICAgY29sb3I6IHJnYigxNjgsIDE2NywgMTY3KTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cblxuICAgIGxpbmsge1xuICAgICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgICAgIGNvbG9yOiByZ2IoMTY4LCAxNjcsIDE2Nyk7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG5cbi5jZW50ZXJNYXJnaW57XG4gICAgLS1wYWRkaW5nLXN0YXJ0OiA1JSAhaW1wb3J0YW50O1xuICAgIC0tcGFkZGluZy1lbmQ6IDUlICFpbXBvcnRhbnQ7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { NavController } from '@ionic/angular';\nimport { AuthenticateService } from '../../services/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.page.html',\n    styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n    validations_form: FormGroup;\n    errorMessage: string = '';\n    currentUserType = 'public_user';\n\n    UserTypes = {\n        'public_user': {\n            title: 'Member Area'\n        },\n        'accessor': {\n            title: 'Accessor Area'\n        },\n        'professional': {\n            title: 'Professional Area'\n        }\n    };\n\n    constructor(\n        private navCtrl: NavController,\n        private authService: AuthenticateService,\n        private formBuilder: FormBuilder,\n        private router: Router\n    ) {\n        this.currentUserType = this.router.url.split('/').pop();\n    }\n\n    ngOnInit() {\n        this.validations_form = this.formBuilder.group({\n            email: new FormControl('', Validators.compose([\n                Validators.required,\n                Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n            ])),\n            password: new FormControl('', Validators.compose([\n                Validators.minLength(5),\n                Validators.required\n            ])),\n            role: this.currentUserType\n        });\n    }\n\n    validation_messages = {\n        'email': [\n            { type: 'required', message: 'Email is required.' },\n            { type: 'pattern', message: 'Please enter a valid email.' }\n        ],\n        'password': [\n            { type: 'required', message: 'Password is required.' },\n            { type: 'minlength', message: 'Password must be at least 5 characters long.' }\n        ]\n    };\n\n\n    loginUser(value: any) {\n        this.authService.loginUser(value)\n            .then(res => {\n                if (res && res.status) {\n                    if (res.status == 'success') {\n                        res.data['email'] = value.email;\n                        this.authService.setUser(res.data);\n                        this.errorMessage = \"\";\n                        this.navCtrl.navigateForward('/home');\n                    } else {\n                        this.errorMessage = res.message;\n                    }\n                }\n            }, err => {\n                console.log(err);\n                this.errorMessage = \"Something went wrong\";\n            })\n    }\n\n    goToRegisterPage() {\n        this.navCtrl.navigateForward('auth/register/' + this.currentUserType);\n    }\n    goToForgetPage() {\n        this.navCtrl.navigateForward('auth/forget/' + this.currentUserType);\n    }\n\n}","module.exports = \"<ion-header color=\\\"dark\\\">\\n</ion-header>\\n\\n<ion-content padding color=\\\"dark\\\">\\n    <ion-img src=\\\"assets/veriprof-logo.png\\\"></ion-img>\\n    <br>\\n    <h2 style=\\\"margin-top: 10px;\\\">New {{UserTypes[currentUserType].title}}</h2>\\n    <br>\\n    <form class=\\\"form\\\" [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"tryRegister(validations_form.value)\\\">\\n        <ion-item color=\\\"medium\\\">\\n            <ion-label position=\\\"floating\\\" color=\\\"medium\\\" class=\\\"inner\\\">Name</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"full_name\\\" color=\\\"medium\\\" class=\\\"inner\\\"></ion-input>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.full_name\\\">\\n                <div class=\\\"error-message\\\"\\n                    *ngIf=\\\"validations_form.get('full_name').hasError(validation.type) && (validations_form.get('full_name').dirty || validations_form.get('full_name').touched)\\\"\\n                    class=\\\"inner\\\">\\n                    {{ validation.message }}\\n                </div>\\n            </ng-container>\\n        </div>\\n        <ion-item color=\\\"medium\\\">\\n            <ion-label position=\\\"floating\\\" color=\\\"medium\\\" class=\\\"inner\\\">Phone Number</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"mobile\\\" color=\\\"medium\\\" class=\\\"inner\\\"></ion-input>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.mobile\\\">\\n                <div class=\\\"error-message\\\"\\n                    *ngIf=\\\"validations_form.get('mobile').hasError(validation.type) && (validations_form.get('mobile').dirty || validations_form.get('mobile').touched)\\\"\\n                    class=\\\"inner\\\">\\n                    {{ validation.message }}\\n                </div>\\n            </ng-container>\\n        </div>\\n        <ion-item color=\\\"medium\\\">\\n            <ion-label position=\\\"floating\\\" color=\\\"medium\\\" class=\\\"inner\\\">Email</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"email\\\" color=\\\"medium\\\" class=\\\"inner\\\"></ion-input>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n                <div class=\\\"error-message\\\"\\n                    *ngIf=\\\"validations_form.get('email').hasError(validation.type) && (validations_form.get('email').dirty || validations_form.get('email').touched)\\\"\\n                    class=\\\"inner\\\">\\n                    {{ validation.message }}\\n                </div>\\n            </ng-container>\\n        </div>\\n        <ion-item color=\\\"medium\\\">\\n            <ion-label position=\\\"floating\\\" color=\\\"medium\\\" class=\\\"inner\\\">Password</ion-label>\\n            <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" class=\\\"form-controll\\\" required color=\\\"medium\\\"\\n                class=\\\"inner\\\"></ion-input>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n                <div class=\\\"error-message\\\"\\n                    *ngIf=\\\"validations_form.get('password').hasError(validation.type) && (validations_form.get('password').dirty || validations_form.get('password').touched)\\\"\\n                    class=\\\"inner\\\">\\n                    {{ validation.message }}\\n                </div>\\n            </ng-container>\\n        </div>\\n        <ion-button class=\\\"submit-btn\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\" color=\\\"dark\\\">Create Account\\n        </ion-button>\\n        <br>\\n        <p></p>\\n        <label class=\\\"error-message\\\" color=\\\"danger\\\">{{errorMessage}}</label>\\n        <label class=\\\"success-message\\\" color=\\\"danger\\\">{{successMessage}}</label>\\n    </form>\\n    <p class=\\\"go-to-login\\\" style=\\\"margin-top:5px;\\\">Already have an account? <a (click)=\\\"goLoginPage()\\\"\\n            style=\\\"color:#DC143C;\\\">Try to Log In.</a></p>\\n</ion-content>\\n<ion-footer color=\\\"dark\\\" class=\\\"footer\\\">\\n    <ion-toolbar color=\\\"dark\\\">\\n        <ion-title class=\\\"footer\\\">Copyright SIVAGO </ion-title>\\n    </ion-toolbar>\\n</ion-footer>\"","module.exports = \".footer {\\n  font-size: 11px;\\n  color: #a8a7a7; }\\n\\n.inner {\\n  font-size: 13px;\\n  color: #a8a7a7; }\\n\\na {\\n  color: #810909; }\\n\\nh2 {\\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\\n  color: #a8a7a7;\\n  text-align: center; }\\n\\nlink {\\n  font-size: 13px;\\n  color: #a8a7a7;\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9yZWdpc3Rlci9HOlxcaW9uaWNcXGlvbmljX2FwcFxcdmVyaXByb2YtYXBwL3NyY1xcYXBwXFxhdXRoXFxyZWdpc3RlclxccmVnaXN0ZXIucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBZTtFQUNmLGNBQXlCLEVBQUE7O0FBR3pCO0VBQ0ksZUFBZTtFQUNmLGNBQXlCLEVBQUE7O0FBR3pCO0VBQ0ksY0FBcUIsRUFBQTs7QUFHekI7RUFDSSxnREFBZ0Q7RUFDaEQsY0FBeUI7RUFDekIsa0JBQWtCLEVBQUE7O0FBR3RCO0VBQ0ksZUFBZTtFQUNmLGNBQXlCO0VBQ3pCLGtCQUFrQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvYXV0aC9yZWdpc3Rlci9yZWdpc3Rlci5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9vdGVyIHtcbiAgICBmb250LXNpemU6IDExcHg7XG4gICAgY29sb3I6IHJnYigxNjgsIDE2NywgMTY3KTtcbiAgICB9XG4gICAgXG4gICAgLmlubmVyIHtcbiAgICAgICAgZm9udC1zaXplOiAxM3B4O1xuICAgICAgICBjb2xvcjogcmdiKDE2OCwgMTY3LCAxNjcpO1xuICAgICAgICB9XG4gICAgXG4gICAgICAgIGEge1xuICAgICAgICAgICAgY29sb3I6IHJnYigxMjksIDksIDkpO1xuICAgICAgICB9XG4gICAgXG4gICAgICAgIGgyIHtcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiBWZXJkYW5hLCBHZW5ldmEsIFRhaG9tYSwgc2Fucy1zZXJpZjtcbiAgICAgICAgICAgIGNvbG9yOiByZ2IoMTY4LCAxNjcsIDE2Nyk7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIH1cbiAgICBcbiAgICAgICAgbGluayB7XG4gICAgICAgICAgICBmb250LXNpemU6IDEzcHg7XG4gICAgICAgICAgICBjb2xvcjogcmdiKDE2OCwgMTY3LCAxNjcpO1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICB9Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthenticateService } from '../../services/authentication.service';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { RestApiService } from 'src/app/services/rest-api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.page.html',\n    styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n    validations_form: FormGroup;\n    errorMessage: string = '';\n    successMessage: string = '';\n\n    prof: boolean = false;\n    currentUserType = 'public_user';\n\n    UserTypes = {\n        'public_user': {\n            title: 'Member Area'\n        },\n        'accessor': {\n            title: 'Accessor Area'\n        },\n        'professional': {\n            title: 'Professional Area'\n        }\n    };\n\n    validation_messages = {\n        'full_name': [\n            { type: 'required', message: 'Name is required.' }\n        ],\n        'mobile': [\n            { type: 'required', message: 'Phone Number is required.' }\n        ],\n        'email': [\n            { type: 'required', message: 'Email is required.' },\n            { type: 'pattern', message: 'Enter a valid email.' }\n        ],\n        'password': [\n            { type: 'required', message: 'Password is required.' }\n        ]\n    };\n\n    constructor(\n        public toastController: ToastController,\n        private navCtrl: NavController,\n        public restApi: RestApiService,\n        private authService: AuthenticateService,\n        private formBuilder: FormBuilder,\n        private router: Router) {\n        this.currentUserType = this.router.url.split('/').pop();\n        console.log(this.currentUserType);\n    }\n\n    ngOnInit() {\n        this.validations_form = this.formBuilder.group({\n            full_name: new FormControl('', Validators.compose([\n                Validators.required\n            ])),\n            mobile: new FormControl('', Validators.compose([\n                Validators.required\n            ])),\n            email: new FormControl('', Validators.compose([\n                Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\n                Validators.required\n            ])),\n            password: new FormControl('', Validators.compose([\n                Validators.required\n            ])),\n            role: this.currentUserType,\n            prof: new FormControl()\n        });\n    }\n\n    tryRegister(value: any) {\n        if (value.full_name.length < 5) { this.restApi.toast('Name must be longer than 5 letters', 1200); }\n        else if (value.mobile.length < 10) { this.restApi.toast('Mobile Number must be longer than 10 letters', 1200); }\n        else if (value.password.length < 5) { this.restApi.toast('Password must be longer than 5 letters', 1200); }\n        else {\n            this.authService.registerUser(value)\n                .then(res => {\n                    if (res && res.status) {\n                        if (res.status == 'success') {\n                            this.errorMessage = \"\";\n                            this.successMessage = res.message;\n                            this.restApi.toast(res.message, 1200);\n                            this.router.navigateByUrl('auth/login/' + this.currentUserType);\n                        } else {\n                            this.errorMessage = res.message;\n                            this.successMessage = \"\";\n                        }\n                    }\n                }, err => {\n                    console.log(err);\n                    this.errorMessage = \"Something went wrong\";\n                    this.successMessage = \"\";\n                })\n        }\n    }\n\n    goLoginPage() {\n        this.router.navigateByUrl('auth/login/' + this.currentUserType);\n    }\n\n}"],"sourceRoot":""}