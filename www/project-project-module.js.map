{"version":3,"sources":["webpack:///./src/app/home/professional/project/project.module.ts","webpack:///./src/app/home/professional/project/project.page.html","webpack:///./src/app/home/professional/project/project.page.scss","webpack:///./src/app/home/professional/project/project.page.ts"],"names":[],"mappings":"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","file":"project-project-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProjectPage } from './project.page';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ProjectPage\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [ProjectPage]\n})\n\nexport class ProjectPageModule { }\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"dark\\\">\\n        <ion-title>My Projects</ion-title>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n    <br>\\n    <ion-segment [(ngModel)]=\\\"segment\\\" color=\\\"light\\\">\\n        <ion-segment-button value=\\\"add-circle\\\">\\n            <ion-icon name=\\\"add-circle\\\" color=\\\"dark\\\"></ion-icon>\\n            <ion-label color=\\\"dark\\\">Add New</ion-label>\\n        </ion-segment-button>\\n        <ion-segment-button value=\\\"paper\\\">\\n            <ion-icon name=\\\"paper\\\" color=\\\"dark\\\"></ion-icon>\\n            <ion-label color=\\\"dark\\\">Projects</ion-label>\\n        </ion-segment-button>\\n    </ion-segment>\\n    <div [ngSwitch]=\\\"segment\\\">\\n        <ion-card *ngSwitchCase=\\\"'paper'\\\">\\n            <ion-card-content>\\n                <h1>My Projects</h1>\\n                <table class=\\\"rwd-table\\\">\\n                    <tr>\\n                        <th>Project Title</th>\\n                        <th>Project Type</th>\\n                        <th>ERF / Lot No</th>\\n                        <th>GPS Coordinates</th>\\n                        <th>Street Address</th>\\n                        <th>Project Location</th>\\n                        <th>Project Province</th>\\n                        <th>Portal Code</th>\\n                        <th>Description</th>\\n                        <th>Service Rendered</th>\\n                        <th>Construction Cost</th>\\n                        <th>Final Cost</th>\\n                        <th>Cost Variance</th>\\n                        <th>Professional Fees</th>\\n                        <th>Client Name</th>\\n                        <th>Project Leader</th>\\n                        <th>Leader Email</th>\\n                        <th>Leader Phone</th>\\n                        <th>Project Status</th>\\n                        <th>Start Year</th>\\n                        <th>Date Completed</th>\\n                        <th></th>\\n                    </tr>\\n                    <ng-container *ngIf=\\\"loadData.length > 0\\\">\\n                        <tr *ngFor=\\\"let x of loadData\\\">\\n                            <td data-th=\\\"Project Title\\\">{{x.title}}</td>\\n                            <td data-th=\\\"Project Type\\\">{{x.type}}</td>\\n                            <td data-th=\\\"ERF / Lot No\\\">{{x.proj_street1}}</td>\\n                            <td data-th=\\\"GPS Coordinates\\\">{{x.proj_street2}}</td>\\n                            <td data-th=\\\"Street Address\\\">{{x.proj_street3}}</td>\\n                            <td data-th=\\\"Project Location\\\">R {{x.proj_city}}</td>\\n                            <td data-th=\\\"Project State\\\">{{x.proj_state}}</td>\\n                            <td data-th=\\\"Portal Code\\\">{{x.proj_zip}}</td>\\n                            <td data-th=\\\"Description\\\">{{x.description}}</td>\\n                            <td data-th=\\\"Service Rendered\\\">{{x.prof_type}}</td>\\n                            <td data-th=\\\"Construction Cost\\\">R{{x.const_cost}}</td>\\n                            <td data-th=\\\"Final Cost\\\">R{{x.final_cost}}</td>\\n                            <td data-th=\\\"Cost Variance\\\">{{x.variable}}% over budget</td>\\n                            <td data-th=\\\"Professional Fees\\\">R{{x.prof_cost}}</td>\\n                            <td data-th=\\\"Client Name\\\">{{x.client_name}}</td>\\n                            <td data-th=\\\"Project Leader\\\">{{x.pl_name}}</td>\\n                            <td data-th=\\\"Leader Email\\\">{{x.pl_email}}</td>\\n                            <td data-th=\\\"Leader Phone\\\">{{x.pl_phone}}</td>\\n                            <td data-th=\\\"Start Year\\\">{{x.year}}</td>\\n                            <ng-container *ngIf=\\\"x.status == 'Completed'\\\">\\n                                <td data-th=\\\"Completed Date\\\" style=\\\"color: blue;\\\">{{x.completed_at}}</td>\\n                            </ng-container>\\n                            <ng-container *ngIf=\\\"x.status == 'Ongoing'\\\">\\n                                <td data-th=\\\"Completed Date\\\" style=\\\"color: rgb(0, 0, 0);\\\">{{x.status}}</td>\\n                            </ng-container>\\n                            <ng-container *ngIf=\\\"x.status == 'Cancelled'\\\">\\n                                <td data-th=\\\"Cancelled Date\\\" style=\\\"color: rgb(255, 0, 0);\\\">{{x.completed_at}}</td>\\n                            </ng-container>\\n                            <ng-container *ngIf=\\\"x.status == 'Completed'\\\">\\n                                <td data-th=\\\"Project Status\\\" style=\\\"color: blue;\\\">{{x.status}}</td>\\n                            </ng-container>\\n                            <ng-container *ngIf=\\\"x.status == 'Ongoing'\\\">\\n                                <td data-th=\\\"Project Status\\\" style=\\\"color: rgb(0, 0, 0);\\\">{{x.status}}</td>\\n                            </ng-container>\\n                            <ng-container *ngIf=\\\"x.status == 'Cancelled'\\\">\\n                                <td data-th=\\\"Project Status\\\" style=\\\"color: rgb(255, 0, 0);\\\">{{x.status}}</td>\\n                            </ng-container>\\n                            <ion-button size=\\\"small\\\" color=\\\"success\\\" class=\\\"project_verify\\\"\\n                                (click)=\\\"action(x, 'Completed')\\\">Complete</ion-button>\\n                            <ion-button size=\\\"small\\\" style=\\\"color: blue;\\\" class=\\\"project_verify\\\"\\n                                (click)=\\\"action(x, 'Ongoing')\\\">Ongoing</ion-button>\\n                            <ion-button size=\\\"small\\\" color=\\\"danger\\\" class=\\\"project_verify\\\"\\n                                (click)=\\\"action(x, 'Cancelled')\\\">Cancelled</ion-button>\\n                        </tr>\\n                    </ng-container>\\n                    <ng-container *ngIf=\\\"loadData.length == 0\\\">\\n                        <div class=\\\"text-center\\\">No Project</div>\\n                    </ng-container>\\n                </table>\\n            </ion-card-content>\\n        </ion-card>\\n        <ion-card *ngSwitchCase=\\\"'add-circle'\\\">\\n            <ion-card-content>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">New Project Title </ion-label>\\n                    <ion-input type=\\\"text\\\" name=\\\"title\\\" [(ngModel)]=\\\"form.title\\\"></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"floating\\\">Description</ion-label>\\n                    <ion-textarea [(ngModel)]=\\\"form.description\\\"></ion-textarea>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>Service Rendered</ion-label>\\n                    <ion-select multiple=\\\"false\\\" [(ngModel)]=\\\"form.prof_type\\\">\\n                        <ion-select-option value=\\\"Project Manager\\\">Project Manager</ion-select-option>\\n                        <ion-select-option value=\\\"Principal Agent\\\">Principal Agent</ion-select-option>\\n                        <ion-select-option value=\\\"Architect\\\">Architect</ion-select-option>\\n                        <ion-select-option value=\\\"Quantity Surveyor\\\">Quantity Surveyor</ion-select-option>\\n                        <ion-select-option value=\\\"Civil Eng\\\">Civil Eng</ion-select-option>\\n                        <ion-select-option value=\\\"Structural Eng\\\">Structural Eng</ion-select-option>\\n                        <ion-select-option value=\\\"Mechanical Eng\\\">Mechanical Eng</ion-select-option>\\n                        <ion-select-option value=\\\"Electrical Eng\\\">Electrical Eng</ion-select-option>\\n                        <ion-select-option value=\\\"OHS agent\\\">OHS agent</ion-select-option>\\n                        <ion-select-option value=\\\"Plumber\\\">Plumber</ion-select-option>\\n                    </ion-select>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label>Select Project Type</ion-label>\\n                    <ion-select multiple=\\\"false\\\" [(ngModel)]=\\\"form.type\\\">\\n                        <ion-select-option value=\\\"Residential\\\">Residential</ion-select-option>\\n                        <ion-select-option value=\\\"Multi-residential\\\">Multi-residential</ion-select-option>\\n                        <ion-select-option value=\\\"Interior\\\">Interior</ion-select-option>\\n                        <ion-select-option value=\\\"Library\\\">Library</ion-select-option>\\n                        <ion-select-option value=\\\"Hospital\\\">Hospital</ion-select-option>\\n                        <ion-select-option value=\\\"Office Parks\\\">Office Parks</ion-select-option>\\n                        <ion-select-option value=\\\"Guest House\\\">Guest House</ion-select-option>\\n                        <ion-select-option value=\\\"Multi purpose Hall\\\">Multi purpose Hall</ion-select-option>\\n                        <ion-select-option value=\\\"Mall\\\">Mall</ion-select-option>\\n                        <ion-select-option value=\\\"RDP Housing\\\">RDP Housing</ion-select-option>\\n                        <ion-select-option value=\\\"Township Market Development\\\">Township Market Development\\n                        </ion-select-option>\\n                        <ion-select-option value=\\\"Road Paving\\\">Road Paving</ion-select-option>\\n                        <ion-select-option value=\\\"Road Construction\\\">Road Construction</ion-select-option>\\n                        <ion-select-option value=\\\"Bridge\\\">Bridge</ion-select-option>\\n                        <ion-select-option value=\\\"Sport Center Development\\\">Sport Center Development</ion-select-option>\\n                    </ion-select>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Construction Cost(R, Input Only Number) : </ion-label>\\n                    <ion-input type=\\\"text\\\" [(ngModel)]=\\\"form.const_cost\\\" min=\\\"0\\\"></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Final Cost(R, Input Only Number) : </ion-label>\\n                    <ion-input type=\\\"text\\\" [(ngModel)]=\\\"form.final_cost\\\" min=\\\"0\\\"></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Professional Fees(R, Input Only Number) : </ion-label>\\n                    <ion-input type=\\\"text\\\" [(ngModel)]=\\\"form.prof_cost\\\" min=\\\"0\\\"></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Start Date</ion-label>\\n                    <ion-input type=\\\"date\\\" placeholder=\\\"Mon/Day/Year\\\" [(ngModel)]=\\\"form.year\\\"></ion-input>\\n                    <!-- <ion-label>Select Year Of Project</ion-label>\\n          <ion-select multiple=\\\"false\\\" [(ngModel)]=\\\"form.year\\\">\\n            <ion-select-option value=\\\"2023\\\">2023</ion-select-option>\\n            <ion-select-option value=\\\"2022\\\">2022</ion-select-option>\\n            <ion-select-option value=\\\"2021\\\">2021</ion-select-option>\\n            <ion-select-option value=\\\"2020\\\">2020</ion-select-option>\\n            <ion-select-option value=\\\"2019\\\">2019</ion-select-option>\\n            <ion-select-option value=\\\"2018\\\">2018</ion-select-option>\\n            <ion-select-option value=\\\"2017\\\">2017</ion-select-option>\\n          </ion-select> -->\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Construction Complete Date</ion-label>\\n                    <ion-input type=\\\"date\\\" placeholder=\\\"Mon/Day/Year\\\" [(ngModel)]=\\\"form.completed_at\\\"></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Client Name</ion-label>\\n                    <ion-input name=\\\"client_name\\\" [(ngModel)]=\\\"form.client_name\\\"></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Project Leader Name</ion-label>\\n                    <ion-input name=\\\"pl_name\\\" [(ngModel)]=\\\"form.pl_name\\\"></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Project Leader Email</ion-label>\\n                    <ion-input name=\\\"pl_email\\\" [(ngModel)]=\\\"form.pl_email\\\"></ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\">Project Leader Phone Number</ion-label>\\n                    <ion-input name=\\\"pl_phone\\\" minlength=\\\"11\\\" [(ngModel)]=\\\"form.pl_phone\\\">+</ion-input>\\n                </ion-item>\\n                <ion-item>\\n                    <ion-label position=\\\"stacked\\\" style=\\\"margin-bottom: 10px;\\\">Project Location</ion-label>\\n                    <ion-item>\\n                        <ion-label position=\\\"stacked\\\"></ion-label>\\n                        <ion-input placeholder=\\\"ERF /Lot No\\\" name=\\\"proj_street1\\\" [(ngModel)]=\\\"form.proj_street1\\\">\\n                        </ion-input>\\n                        <ion-input placeholder=\\\"GPS Coordinates\\\" name=\\\"proj_street2\\\" [(ngModel)]=\\\"form.proj_street2\\\">\\n                        </ion-input>\\n                        <ion-input placeholder=\\\"Street Address\\\" name=\\\"proj_street3\\\" [(ngModel)]=\\\"form.proj_street3\\\">\\n                        </ion-input>\\n                        <ion-input placeholder=\\\"City\\\" name=\\\"proj_city\\\" [(ngModel)]=\\\"form.proj_city\\\"></ion-input>\\n                        <ion-input placeholder=\\\"State\\\" name=\\\"proj_state\\\" [(ngModel)]=\\\"form.proj_state\\\"></ion-input>\\n                        <ion-input placeholder=\\\"Postal Code\\\" name=\\\"proj_zip\\\" [(ngModel)]=\\\"form.proj_zip\\\"></ion-input>\\n                    </ion-item>\\n                </ion-item>\\n                <ion-button (click)=\\\"addProjects()\\\" style=\\\"width: 90%;margin: 10px;\\\">Save Project</ion-button>\\n            </ion-card-content>\\n        </ion-card>\\n    </div>\\n    <br />\\n</ion-content>\\n<ion-footer color=\\\"dark\\\" class=\\\"footer\\\">\\n    <ion-toolbar color=\\\"\\\">\\n        <ion-title class=\\\"footer\\\">Copyright SIVAGO </ion-title>\\n    </ion-toolbar>\\n</ion-footer>\"","module.exports = \".footer {\\n  font-size: 11px;\\n  color: #6d6d6d; }\\n\\n.list {\\n  font-size: 11px; }\\n\\nbody {\\n  padding: 0 2em;\\n  font-family: Montserrat, sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  text-rendering: optimizeLegibility;\\n  color: #444;\\n  background: #eee;\\n  font-size: 10 px; }\\n\\n.project_verify {\\n  padding: 2px;\\n  height: 1.9rem;\\n  margin: 0rem; }\\n\\n.rwd-table {\\n  margin: 1em 0;\\n  min-width: 600px; }\\n\\n.rwd-table tr {\\n    border-top: 1px solid #ddd;\\n    border-bottom: 1px solid #ddd; }\\n\\n.rwd-table th {\\n    display: none; }\\n\\n.rwd-table td {\\n    display: block; }\\n\\n.rwd-table td:first-child {\\n      padding-top: .5em; }\\n\\n.rwd-table td:last-child {\\n      padding-bottom: .5em; }\\n\\n.rwd-table td:before {\\n      content: attr(data-th) \\\": \\\";\\n      font-weight: bold;\\n      width: 9.3em;\\n      display: inline-block; }\\n\\n@media (min-width: 800px) {\\n        .rwd-table td:before {\\n          display: none; } }\\n\\n.rwd-table th,\\n  .rwd-table td {\\n    text-align: left; }\\n\\n@media (min-width: 800px) {\\n      .rwd-table th,\\n      .rwd-table td {\\n        display: table-cell;\\n        padding: .25em .5em; }\\n        .rwd-table th:first-child,\\n        .rwd-table td:first-child {\\n          padding-left: 0; }\\n        .rwd-table th:last-child,\\n        .rwd-table td:last-child {\\n          padding-right: 0; } }\\n\\n.rwd-table h1 {\\n    font-weight: normal;\\n    letter-spacing: -1px;\\n    color: #34495E; }\\n\\n.rwd-table .rwd-table {\\n    background: #34495E;\\n    color: #fff;\\n    border-radius: .4em;\\n    overflow: hidden; }\\n\\n.rwd-table .rwd-table tr {\\n      border-color: #46637f; }\\n\\n.rwd-table .rwd-table th,\\n    .rwd-table .rwd-table td {\\n      margin: .5em 1em; }\\n\\n@media (min-width: 800px) {\\n        .rwd-table .rwd-table th,\\n        .rwd-table .rwd-table td {\\n          padding: 1em !important; } }\\n\\n.rwd-table .rwd-table th,\\n    .rwd-table .rwd-table td:before {\\n      color: #dd5; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9wcm9mZXNzaW9uYWwvcHJvamVjdC9HOlxcaW9uaWNcXGlvbmljX2FwcFxcdmVyaXByb2YtYXBwL3NyY1xcYXBwXFxob21lXFxwcm9mZXNzaW9uYWxcXHByb2plY3RcXHByb2plY3QucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksZUFBZTtFQUNmLGNBQTZCLEVBQUE7O0FBR2pDO0VBQ0ksZUFBZSxFQUFBOztBQUluQjtFQUNJLGNBQTZCO0VBQzdCLG1DQUE4QztFQUM5QyxtQ0FBbUM7RUFDbkMsa0NBQTBDO0VBQzFDLFdBQTRCO0VBQzVCLGdCQUE0QjtFQUM1QixnQkFBNkIsRUFBQTs7QUFLakM7RUFDSSxZQUFZO0VBQ1osY0FBZTtFQUNmLFlBQWEsRUFBQTs7QUFHakI7RUFDSSxhQUFnQjtFQUNoQixnQkFBZ0IsRUFBQTs7QUFGcEI7SUFLUSwwQkFBNkI7SUFDN0IsNkJBQTZCLEVBQUE7O0FBTnJDO0lBVVEsYUFBYSxFQUFBOztBQVZyQjtJQWNRLGNBQWMsRUFBQTs7QUFkdEI7TUFpQlksaUJBQWlCLEVBQUE7O0FBakI3QjtNQXFCWSxvQkFBb0IsRUFBQTs7QUFyQmhDO01BeUJZLDJCQUE4QjtNQUM5QixpQkFBaUI7TUFHakIsWUFBYztNQUNkLHFCQUFxQixFQUFBOztBQUdyQjtRQWpDWjtVQWtDZ0IsYUFBYSxFQUFBLEVBRXBCOztBQXBDVDs7SUF5Q1EsZ0JBQWdCLEVBQUE7O0FBRWhCO01BM0NSOztRQTRDWSxtQkFBbUI7UUFDbkIsbUJBQW1CLEVBQUE7UUE3Qy9COztVQWdEZ0IsZUFBZSxFQUFBO1FBaEQvQjs7VUFvRGdCLGdCQUFnQixFQUFBLEVBQ25COztBQXJEYjtJQTJEUSxtQkFBc0I7SUFDdEIsb0JBQW9CO0lBQ3BCLGNBQXVCLEVBQUE7O0FBN0QvQjtJQWlFUSxtQkFBc0I7SUFDdEIsV0FBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLGdCQUFxQixFQUFBOztBQXBFN0I7TUF1RVkscUJBQW1DLEVBQUE7O0FBdkUvQzs7TUE0RVksZ0JBQWdCLEVBQUE7O0FBRWhCO1FBOUVaOztVQStFZ0IsdUJBQXVCLEVBQUEsRUFFOUI7O0FBakZUOztNQXFGWSxXQUFXLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9ob21lL3Byb2Zlc3Npb25hbC9wcm9qZWN0L3Byb2plY3QucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvb3RlciB7XG4gICAgZm9udC1zaXplOiAxMXB4O1xuICAgIGNvbG9yICAgIDogcmdiKDEwOSwgMTA5LCAxMDkpO1xufVxuXG4ubGlzdCB7XG4gICAgZm9udC1zaXplOiAxMXB4O1xuXG59XG5cbmJvZHkge1xuICAgIHBhZGRpbmcgICAgICAgICAgICAgICA6IDAgMmVtO1xuICAgIGZvbnQtZmFtaWx5ICAgICAgICAgICA6IE1vbnRzZXJyYXQsIHNhbnMtc2VyaWY7XG4gICAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7XG4gICAgdGV4dC1yZW5kZXJpbmcgICAgICAgIDogb3B0aW1pemVMZWdpYmlsaXR5O1xuICAgIGNvbG9yICAgICAgICAgICAgICAgICA6ICM0NDQ7XG4gICAgYmFja2dyb3VuZCAgICAgICAgICAgIDogI2VlZTtcbiAgICBmb250LXNpemUgICAgICAgICAgICAgOiAxMCBweDtcbn1cblxuJGJyZWFrcG9pbnQtYWxwaGE6IDgwMHB4OyAvLyBhZGp1c3QgdG8geW91ciBuZWVkc1xuXG4ucHJvamVjdF92ZXJpZnkge1xuICAgIHBhZGRpbmc6IDJweDtcbiAgICBoZWlnaHQgOiAxLjlyZW07XG4gICAgbWFyZ2luIDogMHJlbTtcbn1cblxuLnJ3ZC10YWJsZSB7XG4gICAgbWFyZ2luICAgOiAxZW0gMDtcbiAgICBtaW4td2lkdGg6IDYwMHB4OyAvLyBhZGp1c3QgdG8geW91ciBuZWVkc1xuXG4gICAgdHIge1xuICAgICAgICBib3JkZXItdG9wICAgOiAxcHggc29saWQgI2RkZDtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNkZGQ7XG4gICAgfVxuXG4gICAgdGgge1xuICAgICAgICBkaXNwbGF5OiBub25lOyAvLyBmb3IgYWNjZXNzaWJpbGl0eSwgdXNlIGEgdmlzdWFsbHkgaGlkZGVuIG1ldGhvZCBoZXJlIGluc3RlYWQhICBcbiAgICB9XG5cbiAgICB0ZCB7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuXG4gICAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgICAgcGFkZGluZy10b3A6IC41ZW07XG4gICAgICAgIH1cblxuICAgICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICAgICAgcGFkZGluZy1ib3R0b206IC41ZW07XG4gICAgICAgIH1cblxuICAgICAgICAmOmJlZm9yZSB7XG4gICAgICAgICAgICBjb250ZW50ICAgIDogYXR0cihkYXRhLXRoKVwiOiBcIjsgLy8gd2hvIGtuZXcgeW91IGNvdWxkIGRvIHRoaXM/IFRoZSBpbnRlcm5ldCwgdGhhdCdzIHdoby5cbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuXG4gICAgICAgICAgICAvLyBvcHRpb25hbCBzdHVmZiB0byBtYWtlIGl0IGxvb2sgbmljZXJcbiAgICAgICAgICAgIHdpZHRoICA6IDkuM2VtOyAvLyBtYWdpYyBudW1iZXIgOiggYWRqdXN0IGFjY29yZGluZyB0byB5b3VyIG93biBjb250ZW50XG4gICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAvLyBlbmQgb3B0aW9uc1xuXG4gICAgICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogJGJyZWFrcG9pbnQtYWxwaGEpIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgdGgsXG4gICAgdGQge1xuICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuXG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAkYnJlYWtwb2ludC1hbHBoYSkge1xuICAgICAgICAgICAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgICAgICAgICAgIHBhZGRpbmc6IC4yNWVtIC41ZW07XG5cbiAgICAgICAgICAgICY6Zmlyc3QtY2hpbGQge1xuICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgJjpsYXN0LWNoaWxkIHtcbiAgICAgICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICB9XG5cbiAgICBoMSB7XG4gICAgICAgIGZvbnQtd2VpZ2h0ICAgOiBub3JtYWw7XG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAtMXB4O1xuICAgICAgICBjb2xvciAgICAgICAgIDogIzM0NDk1RTtcbiAgICB9XG5cbiAgICAucndkLXRhYmxlIHtcbiAgICAgICAgYmFja2dyb3VuZCAgIDogIzM0NDk1RTtcbiAgICAgICAgY29sb3IgICAgICAgIDogI2ZmZjtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogLjRlbTtcbiAgICAgICAgb3ZlcmZsb3cgICAgIDogaGlkZGVuO1xuXG4gICAgICAgIHRyIHtcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogbGlnaHRlbigjMzQ0OTVFLCAxMCUpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGgsXG4gICAgICAgIHRkIHtcbiAgICAgICAgICAgIG1hcmdpbjogLjVlbSAxZW07XG5cbiAgICAgICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAkYnJlYWtwb2ludC1hbHBoYSkge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDFlbSAhaW1wb3J0YW50O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdGgsXG4gICAgICAgIHRkOmJlZm9yZSB7XG4gICAgICAgICAgICBjb2xvcjogI2RkNTtcbiAgICAgICAgfVxuICAgIH1cbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from 'src/app/services/rest-api.service';\nimport { AuthenticateService } from 'src/app/services/authentication.service';\nimport { ToastController } from '@ionic/angular';\n\n\n@Component({\n    selector: 'app-project',\n    templateUrl: './project.page.html',\n    styleUrls: ['./project.page.scss'],\n})\nexport class ProjectPage implements OnInit {\n\n    segment: string = \"paper\";\n    name: string = \"any\";\n    loadData: Array<any> = [];\n    updateData: any\n    form: any = {\n        title: '',\n        prof_type: '',\n        type: 'Residential',\n        const_cost: '',\n        final_cost: '',\n        variable: '',\n        prof_cost: '',\n        year: '',\n        completed_at: '',\n        description: '',\n        client_name: '',\n        pl_name: '',\n        pl_email: '',\n        pl_phone: '',\n        proj_street1: '',\n        proj_street2: '',\n        proj_city: '',\n        proj_state: '',\n        proj_zip: '',\n        status: 'Ongoing'\n    }\n\n    constructor(public restApi: RestApiService, public authService: AuthenticateService, public toastController: ToastController) { }\n\n    ngOnInit() {\n\n        this.getProjects();\n    }\n\n    toast(message) {\n        this.toastController.create({\n            message: message,\n            duration: 2000\n        }).then(toast => toast.present());\n    }\n\n    getProjects() {\n        this.restApi.post('professional/get-project', { user_id: this.authService.user.userId }).subscribe((res: any) => {\n            if (res && res.status) {\n                if (res.status == 'success') {\n                    this.loadData = res.data;\n                    console.log(this.loadData);\n                } else {\n                    this.toastController.create({\n                        message: res.message,\n                        duration: 2000\n                    }).then(toast => toast.present());\n                }\n            }\n        }, error => {\n            this.toastController.create({\n                message: 'Something went wrong.',\n                duration: 2000\n            }).then(toast => toast.present());\n        });\n    }\n\n    addProjects() {\n        let { title, prof_type, const_cost, final_cost, variable, prof_cost, year, completed_at, description, client_name, pl_name, pl_email, pl_phone, proj_street1, proj_street2, proj_city, proj_state, proj_zip } = this.form;\n        if (title.length == 0) { this.toast(\"Please fill title\"); return; }\n        if (prof_type.length == 0) { this.toast(\"Please fill Type\"); return; }\n        if (const_cost.length == 0) { this.toast(\"Please fill Construction Cost\"); return; }\n        if (final_cost.length == 0) { this.toast(\"Please fill Final Cost\"); return; }\n        if (prof_cost.length == 0) { this.toast(\"Please fill Professional Cost\"); return; }\n        if (year.length == 0) { this.toast(\"Please fill Start Date\"); return; }\n        if (completed_at.length == 0) { this.toast(\"Please fill Construction Complete Date\"); return; }\n        if (description.length == 0) { this.toast(\"Please fill description\"); return; }\n        if (client_name.length == 0) { this.toast(\"Please fill Client Name\"); return; }\n        if (pl_name.length == 0) { this.toast(\"Please fill Project Leader Name\"); return; }\n        if (pl_email.length == 0) { this.toast(\"Please fill Project Leader Email\"); return; }\n        if (pl_phone.length == 0) { this.toast(\"Please fill Project Leader Phone number\"); return; }\n        if (proj_street1.length == 0) { this.toast(\"Please fill Project Location Street1\"); return; }\n        if (proj_street2.length == 0) { this.toast(\"Please fill Project Location Street2\"); return; }\n        if (proj_city.length == 0) { this.toast(\"Please fill Project Location City\"); return; }\n        if (proj_state.length == 0) { this.toast(\"Please fill Project Location State\"); return; }\n        if (proj_zip.length == 0) { this.toast(\"Please fill Project Location Zipcode\"); return; }\n        // if (!this.form.const_cost.includes('R')) { this.form.const_cost = this.form.const_cost.concat(\"R\");}\n        // if (!this.form.prof_cost.includes('R')) {this.form.prof_cost = this.form.prof_cost.concat(\"R\");}\n        this.form.variable = ((parseInt(final_cost) - parseInt(const_cost)) / parseInt(const_cost) * 100).toString();\n        this.restApi.post('professional/add-project', { user_id: this.authService.user.userId, data: this.form }).subscribe((res: any) => {\n            if (res && res.status) {\n                this.toastController.create({ message: res.message, duration: 2000 })\n                    .then(toast => toast.present());\n                if (res.id != \"exist\") { this.getProjects(); this.segment = 'paper'; }\n            }\n        }, error => {\n            this.toastController.create({\n                message: 'Something went wrong.',\n                duration: 2000\n            }).then(toast => toast.present());\n        });\n    }\n\n    action(x, act) {\n        this.restApi.post('professional/action-project', { title: x.title, user_id: x.created_by, verified: act }).subscribe((res: any) => {\n            if (res && res.status) {\n                if (res.status == 'success') {\n                    this.getProjects();\n                } else {\n                    this.toastController.create({\n                        message: res.message,\n                        duration: 2000\n                    }).then(toast => toast.present());\n                }\n            }\n        }, error => {\n            this.toastController.create({\n                message: 'Something went wrong.',\n                duration: 2000\n            }).then(toast => toast.present());\n        });\n    }\n}\n\n"],"sourceRoot":""}