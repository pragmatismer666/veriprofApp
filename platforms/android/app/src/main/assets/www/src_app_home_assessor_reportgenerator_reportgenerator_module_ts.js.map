{"version":3,"file":"src_app_home_assessor_reportgenerator_reportgenerator_module_ts.js","mappings":"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","sources":["./src/app/home/assessor/reportgenerator/reportgenerator.module.ts","./src/app/home/assessor/reportgenerator/reportgenerator.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ReportgeneratorPage } from './reportgenerator.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReportgeneratorPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ReportgeneratorPage]\n})\nexport class ReportgeneratorPageModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { RestApiService } from \"src/app/services/rest-api.service\";\nimport { ActivatedRoute, Router, NavigationExtras } from \"@angular/router\";\nimport { AuthenticateService } from \"src/app/services/authentication.service\";\n\n\n@Component({\n    selector: \"app-reportgenerator\",\n    templateUrl: \"./reportgenerator.page.html\",\n    styleUrls: [\"./reportgenerator.page.scss\"],\n})\nexport class ReportgeneratorPage implements OnInit {\n\n    data: any;\n    type: string;\n\n    keys: Array<string>;\n    report_data: Array<any>;\n    profess_id: string = \"\";\n    content_id: string = \"\";\n    compliance_status: string = \"Unverified\";\n    compliance_rate: string = \"0%\";\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        public restApi: RestApiService,\n        public authService: AuthenticateService,\n    ) {\n        this.activatedRoute.queryParams.subscribe(params => {\n            if (params && params.type) {\n                this.type = params.type[0].toUpperCase() + params.type.slice(1);\n            }\n            if (params && params.data) {\n                this.data = JSON.parse(params.data);\n                var keys = [];\n                for (let key in this.data) {\n                    keys.push(key);\n                }\n                let datas = [];\n                let continue_index = 0;\n                for (let i = 0; i < keys.length; i++) {\n                    let val_str = \"\";\n                    let val_data = this.data[keys[i]];\n                    // console.log(\"reportgenerator params : \", keys[i], \" : \", this.data[keys[i]]);\n                    if (\n                        keys[i] == \"id\" ||\n                        keys[i] == \"created_by\" ||\n                        keys[i] == \"file\" ||\n                        keys[i] == \"certificate\" ||\n                        keys[i] == \"id_no\" ||\n                        keys[i] == \"user_id\" ||\n                        keys[i] == \"is_director\" ||\n                        keys[i] == \"verified_at\" ||\n                        keys[i] == \"verified_by\" ||\n                        keys[i] == \"verify_at\" ||\n                        keys[i] == \"verify_by\" ||\n                        keys[i] == \"updated_at\" ||\n                        keys[i] == \"file\" ||\n                        keys[i] == \"employer_requirPDF\" ||\n                        keys[i] == \"status_verified\" ||\n                        keys[i] == \"pratical_certification\" ||\n                        (keys[i] == \"status\" && this.type != \"Project\")\n                    ) {\n                        if (keys[i] == \"created_by\" || keys[i] == \"user_id\") {\n                            this.profess_id = this.data[keys[i]];\n                        }\n                        if (keys[i] == \"id\") {\n                            this.content_id = this.data[keys[i]];\n                        }\n                        continue_index++;\n                        continue;\n                    } else if (keys[i] == \"jtitle\") {\n                        val_str = \"JOB TITLE \";\n                    } else if (keys[i] == \"variable\") {\n                        val_str = \"VARIATION \";\n                    } else if (keys[i].includes(\"_\")) {\n                        let val_strs = keys[i].split(\"_\");\n                        if (val_strs.length > 2) {\n                            for (let i = 0; i < val_strs.length; i++) {\n                                val_str += val_strs[i].toUpperCase() + \" \";\n                            }\n                        } else if (val_strs[0] == \"exp\") {\n                            val_str = \"EXPERIENCE \" + val_strs[1].toUpperCase();\n                        }\n                        else if (val_strs[0] == \"pl\") {\n                            val_str = \"PROJECT LEADER \" + val_strs[1].toUpperCase();\n                        } else if (val_strs[0] == \"proj\") {\n                            val_str = \"PROJECT \" + val_strs[1].toUpperCase();\n                        } else if (val_strs[0] == \"prof\") {\n                            val_str = \"PROFESS \" + val_strs[1].toUpperCase();\n                        } else {\n                            val_str = val_strs[0].toUpperCase() + \" \" + val_strs[1].toUpperCase();\n                        }\n                    } else {\n                        val_str = keys[i].toUpperCase();\n                    }\n                    if (val_data.includes(\".pdf\")) {\n                        val_data = \"Uploaded\";\n                    } else if (val_data == \"\" || val_data == null) {\n                        val_data = \"None\";\n                    }\n                    let each_row = { id: i + 1 - continue_index, key: val_str, val: val_data, status: 0 };\n                    datas.push(each_row);\n                }\n                this.report_data = datas;\n            }\n        });\n    }\n\n    ngOnInit() {\n\n    }\n\n    generate_report() {\n        let new_report = {\n            accessor: this.authService.user.name,\n            profess: this.profess_id,\n            content_id: this.content_id,\n            report_type: this.type.toLowerCase(),\n            data: this.report_data,\n            created_by: this.authService.user.userId,\n            score: this.compliance_rate,\n        }\n        this.restApi.post(\"accessor/add-report\", new_report).subscribe((res: any) => {\n            console.log(res);\n            if (res && res.status) {\n                if (res.status) {\n                    this.restApi.toast(\"Generate the report PDF as successfully.\", 1200);\n                    let navigationExtras: NavigationExtras = {\n                        queryParams: {\n                            type: this.type.toLowerCase(),\n                        }\n                    };\n                    this.router.navigate([\"home/assessor/accessorsreport\"], navigationExtras);\n                } else {\n                    this.restApi.toast(\"Please retry to generate the report .\", 1200);\n                }\n            }\n        }, error => {\n            console.log(error);\n            this.restApi.toast(\"Something went wrong.\", 1200);\n        });\n    }\n\n    change_status(each_row: any, verification: Boolean) {\n        console.log(\"Report Generator this.report_data status = : \", this.report_data[each_row.id - 1]);\n        if (verification && this.report_data[each_row.id - 1] != null) {\n            this.report_data[each_row.id - 1].status = 1;\n        } else {\n            this.report_data[each_row.id - 1].status = 0;\n        }\n        console.log(\"Report Generator this.report_data status = : \", this.report_data[each_row.id - 1]);\n        let trueLength = 0;\n        for (let i = 0; i < this.report_data.length; i++) {\n            if (this.report_data[i].status) {\n                trueLength++;\n            }\n        }\n        if (this.report_data.length == trueLength) {\n            this.compliance_status = \"Verified\";\n            this.compliance_rate = \"100%\"\n        } else {\n            this.compliance_status = \"Unverified\";\n            this.compliance_rate = ((trueLength / this.report_data.length * 100).toFixed(2)).toString() + \"%\";\n        }\n    }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}