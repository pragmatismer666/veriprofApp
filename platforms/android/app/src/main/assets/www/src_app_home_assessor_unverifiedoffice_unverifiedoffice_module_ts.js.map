{"version":3,"file":"src_app_home_assessor_unverifiedoffice_unverifiedoffice_module_ts.js","mappings":"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","sources":["./src/app/home/assessor/unverifiedoffice/unverifiedoffice.module.ts","./src/app/home/assessor/unverifiedoffice/unverifiedoffice.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { FormsModule } from '@angular/forms';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { UnverifiedofficePage } from './unverifiedoffice.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UnverifiedofficePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UnverifiedofficePage]\n})\nexport class UnverifiedofficePageModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { RestApiService } from \"src/app/services/rest-api.service\";\nimport { AuthenticateService } from \"src/app/services/authentication.service\";\nimport { ToastController, AlertController } from \"@ionic/angular\";\nimport { Router, NavigationExtras } from \"@angular/router\";\n// import { AlertController } from \"ionic-angular\";\n\n@Component({\n    selector: \"app-unverifiedoffice\",\n    templateUrl: \"./unverifiedoffice.page.html\",\n    styleUrls: [\"./unverifiedoffice.page.scss\"],\n})\n\nexport class UnverifiedofficePage implements OnInit {\n\n    segment: string = \"unverified\";\n    offices: Array<any> = [];\n    verified: Array<any> = [];\n    schedules: Array<any>;\n    x: any;\n    action: any;\n\n    constructor(\n        public toastController: ToastController,\n        public restApi: RestApiService,\n        private router: Router,\n        public authService: AuthenticateService,\n        public alertController: AlertController,\n    ) { }\n\n    ngOnInit() {\n        this.getUnverifiedOffice();\n        this.getVerifiedOffice();\n    }\n\n    getUnverifiedOffice() {\n        this.restApi.post(\"accessor/get-unverifiedOffice\", {}).subscribe((res: any) => {\n            if (res && res.status) {\n                // console.log(\"UnverifiedofficePage getUnverifiedOffice res.data = : \", JSON.stringify(res.data));\n                if (res.status == \"success\") {\n                    this.offices = res.data;\n                    // console.log(\"UnverifiedofficePage getUnverifiedOffice this.offices = : \", JSON.stringify(this.offices));\n                    // this.get_schedule();\n                } else {\n                    this.restApi.toast(res.message, 1200);\n                }\n            }\n        }, error => {\n            console.log(error);\n            this.restApi.toast(\"Something went wrong.\", 1200);\n        });\n    }\n\n    getVerifiedOffice() {\n        this.restApi.post(\"accessor/get-verifiedOffice\", {}).subscribe((res: any) => {\n            if (res && res.status) {\n                // console.log(res.data);\n                if (res.status == \"success\") {\n                    this.verified = res.data;\n                    // this.get_schedule();\n                } else {\n                    this.restApi.toast(res.message, 1200);\n                }\n            }\n        }, error => {\n            console.log(error);\n            this.restApi.toast(\"Something went wrong.\", 1200);\n        });\n    }\n\n    checkDate(date: string) {\n        return true;\n    }\n\n    async selectDate(x: any) {\n        let nowDateTime = new Date((new Date).getTime() + 60 * 60 * 24 * 1000).toJSON().toString().split(\"T\")[0];\n        const alert = await this.alertController.create({\n            header: \"Please select date\",\n            inputs: [\n                {\n                    name: \"schedule_date\",\n                    placeholder: \"Select DateTime\",\n                    type: \"datetime-local\",\n                    min: `${nowDateTime}T00:00`,\n                }\n            ],\n            buttons: [\n                {\n                    text: \"Cancel\",\n                    role: \"cancel\",\n                    cssClass: \"secondary\",\n                    handler: () => {\n                        console.log(\"Confirm Cancel\");\n                    }\n                },\n                {\n                    text: \"Ok\",\n                    handler: (alertData) => { //takes the data \n                        this.addSchedule(x, alertData.schedule_date);\n                    }\n                }\n            ]\n        });\n\n        await alert.present();\n    }\n\n    addSchedule(x: any, schedule_date: string) {\n        let newSchedule = {\n            verify_user_id: x.created_by,\n            verify_target: \"office\",\n            verify_content_id: x.id,\n            created_by: this.authService.user.userId,\n            date: schedule_date\n        }\n        this.restApi.post(\"accessor/add-schedule\", newSchedule).subscribe((res: any) => {\n            // console.log(res);\n            if (res && res.status && res.data) {\n                this.restApi.toast(\"Added Schedule successfully\", 1200);\n                this.getUnverifiedOffice();\n            } else {\n                this.restApi.toast(\"Invalid Database Connection\", 1200);\n            }\n        }, (error) => {\n            console.log(\"unverifiedoffice addSchedule error = : \", error);\n            this.restApi.toast(\"Something went wrong.\", 1200);\n        });\n    }\n\n    verifyOffice(data: any) {\n        let navigationExtras: NavigationExtras = {\n            queryParams: {\n                data: JSON.stringify(data),\n                type: \"office\",\n            }\n        };\n        this.router.navigate([\"home/assessor/reportgenerator\"], navigationExtras);\n    }\n\n    download(filename: string) {\n        this.restApi.downfile(\"uploads/\", filename);\n    }\n\n    updatebusiness(x: any) {\n        this.restApi.post(\"accessor/verify-business\", { user_id: this.authService.user.userId, business_id: x.buzi_id, office_id: x.id, email: x.email }).subscribe((res: any) => {\n            if (res && res.status) {\n                if (res.status == \"success\") {\n                    this.getUnverifiedOffice();\n                }\n                this.restApi.toast(res.data, 1200);\n            }\n        }, error => {\n            this.restApi.toast(\"Something went wrong.\", 1200);\n        });\n    }\n\n    async verify(x: any) {\n        // console.log(x);\n        let val = 0;\n        const alert = await this.alertController.create({\n            cssClass: \"my-custom-class\",\n            header: \"Unverified Business Detail\",\n            // message: \"Business Title : \"+x.org_name+\"<br>Project Type : \"+x.project_type+\"<br>CPD Level : \"+x.cdp_level+\"<br>CIPC Reg Number : \"+x.cipc_reg_number+\"<br>Professional : \"+x.profess+\"<br>Business Address1 : \"+x.business_address_line_1+\"<br>Business Address2 : \"+x.business_address_line2+\"<br>City : \"+x.city+\"<br>Code : \"+x.code+\"<br>States : \"+x.province+\"\",\n            inputs: [{ id: \"pname\", name: \"pname\", type: \"checkbox\", label: \"Name is \" + x.pname + \"?\", handler: () => { val++; }, },\n            { id: \"pcouncil\", name: \"pcouncil\", type: \"checkbox\", label: \"Practice Council reg. No is \" + x.pcouncil + \"?\", handler: () => { val++; }, },\n            { name: \"pcipc_reg_no\", type: \"checkbox\", label: \"CIPC registration is \" + x.pcipc_reg_no + \"?\", handler: () => { val++; }, },\n            { name: \"ptype\", type: \"checkbox\", label: \"Business Type is \" + x.ptype + \"?\", handler: () => { val++; }, },\n            { name: \"director\", type: \"checkbox\", label: \"Director is \" + x.director + \"?\", handler: () => { val++; }, },\n            { name: \"dir_prof_regno\", type: \"checkbox\", label: \"Director Prof registration No is \" + x.dir_prof_regno + \"?\", handler: () => { val++; }, },\n            { name: \"owned\", type: \"checkbox\", label: \"%Owned is \" + x.owned + \"?\", handler: () => { val++; }, },\n            { name: \"phone\", type: \"checkbox\", label: \"Office Phone Number is \" + x.phone + \"?\", handler: () => { val++; }, },\n            { name: \"email\", type: \"checkbox\", label: \"Office Email is \" + x.email + \"?\", handler: () => { val++; }, },\n            { name: \"res_prof_name\", type: \"checkbox\", label: \"Responsible Professional Name is \" + x.res_prof_name + \"?\", handler: () => { val++; }, },\n            { name: \"res_prof_reg\", type: \"checkbox\", label: \"Responsible Professional Reg No is \" + x.res_prof_reg + \"?\", handler: () => { val++; }, }\n            ],\n            buttons: [\n                {\n                    text: \"Cancel\",\n                    role: \"cancel\",\n                    cssClass: \"secondary\"\n                }, {\n                    text: \"Okay\",\n                    cssClass: \"secondary\",\n                    handler: () => {\n                        if (val >= 11) { this.updatebusiness(x); }\n                        else {\n                            this.restApi.toast(\"It is not enough to verify.\", 1200);\n                        }\n                    }\n                }\n            ]\n        });\n        await alert.present();\n    }\n\n    get_schedule() {\n        console.log(this.authService.userDetails().name, this.authService.user.userId);\n        this.restApi.post(\"accessor/get-schedule\", {}).subscribe((res: any) => {\n            if (res) {\n                if (res.status == \"success\") {\n                    this.schedules = res.data;\n                    // console.log(this.schedules, this.offices);\n                    for (var j = 0; j < this.offices.length; j++) {\n                        for (var i = 0; i < this.schedules.length; i++) {\n                            if (this.schedules[i].verify_target == this.offices[j].email && new Date(this.schedules[i].date).getTime() < new Date().getTime()) {\n                                this.offices[j].status = \"Pending\";\n                            }\n                        }\n                    }\n                }\n            }\n        }, error => {\n            this.restApi.toast(\"Something went wrong.\", 1200);\n        });\n    }\n\n    schedule() {\n        this.router.navigateByUrl(\"home/assessor/schedules\");\n    }\n}\n"],"names":[],"sourceRoot":"webpack:///"}