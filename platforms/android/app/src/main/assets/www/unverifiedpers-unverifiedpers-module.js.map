{"version":3,"sources":["webpack:///./src/app/home/assessor/unverifiedpers/unverifiedpers.module.ts","webpack:///./src/app/home/assessor/unverifiedpers/unverifiedpers.page.html","webpack:///./src/app/home/assessor/unverifiedpers/unverifiedpers.page.scss","webpack:///./src/app/home/assessor/unverifiedpers/unverifiedpers.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEc;AAE3D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uEAAkB;KAC9B;CACF,CAAC;AAWF;IAAA;IAAuC,CAAC;IAA3B,wBAAwB;QATpC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,uEAAkB,CAAC;SACnC,CAAC;OACW,wBAAwB,CAAG;IAAD,+BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBrC,ieAAie,QAAQ,qBAAqB,SAAS,qBAAqB,SAAS,qBAAqB,YAAY,kmB;;;;;;;;;;;ACAtkB,0BAA0B,oBAAoB,oBAAoB,EAAE,eAAe,0BAA0B,mBAAmB,kBAAkB,6BAA6B,EAAE,eAAe,uBAAuB,mBAAmB,kBAAkB,6BAA6B,EAAE,cAAc,qBAAqB,EAAE,gBAAgB,oBAAoB,qBAAqB,EAAE,+CAA+C,2uC;;;;;;;;;;;;;;;;;;;;;ACAxX;AACe;AACE;AACW;AACrC;AAOzC;IAOE,4BAAmB,eAAgC,EACzC,MAAc,EAAQ,OAAuB,EAAS,WAAgC,EAAS,eAAgC;QADtH,oBAAe,GAAf,eAAe,CAAiB;QACzC,WAAM,GAAN,MAAM,CAAQ;QAAQ,YAAO,GAAP,OAAO,CAAgB;QAAS,gBAAW,GAAX,WAAW,CAAqB;QAAS,oBAAe,GAAf,eAAe,CAAiB;IAAI,CAAC;IAE9I,qCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,uCAAU,GAAV;QAAA,iBAmBC;QAlBC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,GAAQ;YAC5D,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE;gBACrB,IAAI,GAAG,CAAC,MAAM,IAAI,SAAS,EAAE;oBAC3B,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;oBACrB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;iBACxB;qBAAM;oBACL,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC;wBAC1B,OAAO,EAAE,GAAG,CAAC,OAAO;wBACpB,QAAQ,EAAE,IAAI;qBACf,CAAC,CAAC,IAAI,CAAC,eAAK,IAAI,YAAK,CAAC,OAAO,EAAE,EAAf,CAAe,CAAC,CAAC;iBACnC;aACF;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAC1B,OAAO,EAAE,uBAAuB;gBAChC,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC,IAAI,CAAC,eAAK,IAAI,YAAK,CAAC,OAAO,EAAE,EAAf,CAAe,CAAC,CAAC;QACpC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,yBAAyB,CAAC,CAAC;IACvD,CAAC;IArCU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,kIAAyC;;SAE1C,CAAC;+EAQoC,8DAAe;YACjC,sDAAM,EAAiB,gFAAc,EAAsB,2FAAmB,EAA0B,8DAAe;OAR9H,kBAAkB,CAwH9B;IAAD,yBAAC;CAAA;AAxH8B","file":"unverifiedpers-unverifiedpers-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UnverifiedpersPage } from './unverifiedpers.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UnverifiedpersPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UnverifiedpersPage]\n})\nexport class UnverifiedpersPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"dark\\\">\\n    <ion-back-button slot=\\\"start\\\"></ion-back-button>\\n    <ion-title>Unverified Professional</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"scrollH\\\">\\n    <table class=\\\"table\\\">\\n      <tr>\\n        <th>Name</th>\\n        <th>ID No</th>\\n        <th>Email</th>\\n        <th>Exp in Years</th>\\n        <th>Status</th>\\n      </tr>\\n      <tr *ngFor=\\\"let x of objs\\\">\\n        <td>{{x.name}}</td>\\n        <td>{{x.id_no}}</td>\\n        <td>{{x.email}}</td>\\n        <td>{{x.exp_year}}</td>\\n        <td class=\\\"d-flex\\\">\\n          <ng-container *ngIf=\\\"x.status == 'Pending'\\\">\\n            <ion-button size=\\\"small\\\" color=\\\"success\\\" class='verifybtn' (click)=\\\"verify(x)\\\">Begin Verification</ion-button>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"x.status == 'Unverified'\\\">\\n            <ion-button size=\\\"small\\\" color=\\\"danger\\\" class='verifybtn' (click)=\\\"schedule()\\\">Verify</ion-button>\\n          </ng-container>\\n          <ng-container *ngIf=\\\"x.status == 'Verified'\\\">Verified</ng-container>\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n</ion-content>\\n\"","module.exports = \".table {\\n  font-size: 10px;\\n  min-width: 100%; }\\n  .table th {\\n    background: #8a8a8a;\\n    padding: 5px;\\n    color: #fff;\\n    border: 1px solid #fff; }\\n  .table td {\\n    background: #ccc;\\n    padding: 5px;\\n    color: #000;\\n    border: 1px solid #fff; }\\n  .scrollH {\\n  overflow-x: auto; }\\n  .verifybtn {\\n  font-size: 10px;\\n  margin-top: -2px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9hc3Nlc3Nvci91bnZlcmlmaWVkcGVycy9HOlxcaW9uaWNcXGlvbmljX2FwcFxcdmVyaXByb2YtYXBwL3NyY1xcYXBwXFxob21lXFxhc3Nlc3NvclxcdW52ZXJpZmllZHBlcnNcXHVudmVyaWZpZWRwZXJzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQWU7RUFDZixlQUFlLEVBQUE7RUFGbkI7SUFJUSxtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLFdBQVc7SUFDWCxzQkFBc0IsRUFBQTtFQVA5QjtJQVdRLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osV0FBVztJQUNYLHNCQUFzQixFQUFBO0VBSTlCO0VBQ0ksZ0JBQWdCLEVBQUE7RUFHcEI7RUFDSSxlQUFlO0VBQ2YsZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9ob21lL2Fzc2Vzc29yL3VudmVyaWZpZWRwZXJzL3VudmVyaWZpZWRwZXJzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50YWJsZXtcclxuICAgIGZvbnQtc2l6ZTogMTBweDtcclxuICAgIG1pbi13aWR0aDogMTAwJTtcclxuICAgIHRoe1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICM4YThhOGE7XHJcbiAgICAgICAgcGFkZGluZzogNXB4O1xyXG4gICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XHJcbiAgICB9XHJcblxyXG4gICAgdGR7XHJcbiAgICAgICAgYmFja2dyb3VuZDogI2NjYztcclxuICAgICAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICAgICAgY29sb3I6ICMwMDA7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2ZmZjtcclxuICAgIH1cclxufVxyXG5cclxuLnNjcm9sbEgge1xyXG4gICAgb3ZlcmZsb3cteDogYXV0bztcclxufVxyXG5cclxuLnZlcmlmeWJ0bntcclxuICAgIGZvbnQtc2l6ZTogMTBweDtcclxuICAgIG1hcmdpbi10b3A6IC0ycHg7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ToastController,AlertController } from '@ionic/angular';\nimport { RestApiService } from 'src/app/services/rest-api.service';\nimport { AuthenticateService } from 'src/app/services/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-unverifiedpers',\n  templateUrl: './unverifiedpers.page.html',\n  styleUrls: ['./unverifiedpers.page.scss'],\n})\nexport class UnverifiedpersPage implements OnInit {\n\n  objs: Array<any>;\n  schedules:Array<any>;\n  x:string;\n  key:string;\n  \n  constructor(public toastController: ToastController,\n    private router: Router,public restApi: RestApiService, public authService: AuthenticateService, public alertController: AlertController) { }\n\n  ngOnInit() {\n    this.getProfess();\n  }\n\n  getProfess() {\n    this.restApi.post('accessor/get-prof', {}).subscribe((res: any) => {\n      if (res && res.status) {\n        if (res.status == 'success') {\n          this.objs = res.data;\n          console.log(this.objs);\n        } else {\n          this.toastController.create({\n            message: res.message,\n            duration: 2000\n          }).then(toast => toast.present());\n        }\n      }\n    }, error => {\n      this.toastController.create({\n        message: 'Something went wrong.',\n        duration: 2000\n      }).then(toast => toast.present());\n    });\n  }\n\n  schedule() {\n    this.router.navigateByUrl('home/assessor/schedules');\n  }\n\n  //  Non work functions ---------------------------\n  // async action(x, key) {\n  //   console.log(x);\n  //   let val = 0;\n  //   const alert = await this.alertController.create({\n  //     cssClass: 'my-custom-class',\n  //     header: 'Unverified Profile Detail',\n  //     // message: 'Business Title : '+x.org_name+'<br>Project Type : '+x.project_type+'<br>CPD Level : '+x.cdp_level+'<br>CIPC Reg Number : '+x.cipc_reg_number+'<br>Professional : '+x.profess+'<br>Business Address1 : '+x.business_address_line_1+'<br>Business Address2 : '+x.business_address_line2+'<br>City : '+x.city+'<br>Code : '+x.code+'<br>States : '+x.province+'',\n  //     inputs: [{ id: 'name', name: 'name', type: 'checkbox',label:'Name is '+x.name+'?', handler: () => { val++; }, },\n  //       { id: 'surname', name: 'surname', type: 'checkbox',label:'SurName is '+x.surname+'?', handler: () => { val++; }, },\n  //       { id: 'id_no', name: 'id_no', type: 'checkbox',label:'ID No is '+x.id_no+'?', handler: () => { val++; }, },\n  //       { id: 'council', name: 'council', type: 'checkbox',label:'Practice Council reg. No is '+x.council+'?', handler: () => { val++; }, },\n  //       {name: 'reg_no', type: 'checkbox',label:'Professional Registration No is '+x.reg_no+'?', handler: () => { val++; }, },\n  //       {name: 'employer', type: 'checkbox',label:'Employer is '+x.employer+'?', handler: () => { val++; }, },\n  //       {name: 'exp_year', type: 'checkbox',label:'Exp in Year is '+x.exp_year+'?', handler: () => { val++; }, },\n  //       {name: 'street1', type: 'checkbox',label:'Street1 is '+x.street1+'?', handler: () => { val++; }, },\n  //       {name: 'street2', type: 'checkbox',label:'Street2 is '+x.street2+'?', handler: () => { val++; }, },\n  //       {name: 'city', type: 'checkbox',label:'City is '+x.city+'?', handler: () => { val++; }, },\n  //       {name: 'zipcode', type: 'checkbox',label:'Zip Code is '+x.zipcode+'?', handler: () => { val++; }, },\n  //       {name: 'state', type: 'checkbox',label:'State is '+x.state+'?', handler: () => { val++; }, },\n  //       {name: 'full_part', type: 'checkbox',label:'Full / Part is '+x.full_part+'?', handler: () => { val++; }, }\n  //     ],\n  //     buttons: [\n  //       {\n  //         text: 'Cancel',\n  //         role: 'cancel',\n  //         cssClass: 'secondary'\n  //       }, {\n  //         text: 'Okay',\n  //         cssClass: 'secondary',\n  //         handler: () => {\n  //           if ( val >= 13 ){ this.updateprofile(x); }\n  //           else { this.toastController.create({ message: \"It is not enough to verify.\", duration: 2000 }).then(toast => toast.present()) }\n  //         }\n  //       }\n  //     ]\n  //   });\n  //   await alert.present();\n  // }\n\n  // updateprofile(x) {\n  //   this.restApi.post('accessor/verify-prof', {profile_id:x.id, pemail:x.email, user_id:this.authService.user.userId}).subscribe((res: any) => {\n  //     if (res && res.status) {\n  //       if (res.status == 'success') {\n  //           this.getProfess();\n  //       } \n  //       this.toastController.create({\n  //         message: res.message,\n  //         duration: 2000\n  //       }).then(toast => toast.present());\n  //     }\n  //   }, error => {\n  //     this.toastController.create({\n  //       message: 'Something went wrong.',\n  //       duration: 2000\n  //     }).then(toast => toast.present());\n  //   });\n  // }\n\n  // get_schedule(){\n  //   this.restApi.get('accessor/get-schedule').subscribe((res: any) => {\n  //     if (res) {\n  //       if (res.status == 'success') {\n  //         this.schedules = res.data;\n  //         console.log(this.schedules, this.objs);\n  //         for (var i=0;i<this.schedules.length;i++){\n  //           for (var j=0;j<this.objs.length;j++){\n  //             if (this.schedules[i].verify_target == this.objs[j].email && new Date(this.schedules[i].date).getTime() < new Date().getTime() ){\n  //               this.objs[j].status = 'Pending';\n  //             }            \n  //           }\n  //         }\n  //       }\n  //     }\n  //   }, error => {\n  //     this.toastController.create({\n  //       message: 'Something went wrong.',\n  //       duration: 2000\n  //     }).then(toast => toast.present());\n  //   });\n  // }\n}\n"],"sourceRoot":""}