{"version":3,"file":"src_app_home_assessor_accessorsreport_reportgenerator_reportgenerator_module_ts.js","mappings":"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","sources":["./src/app/home/assessor/accessorsreport/reportgenerator/reportgenerator.module.ts","./src/app/home/assessor/accessorsreport/reportgenerator/reportgenerator.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ReportgeneratorPage } from './reportgenerator.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ReportgeneratorPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ReportgeneratorPage]\n})\nexport class ReportgeneratorPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from 'src/app/services/rest-api.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticateService } from 'src/app/services/authentication.service';\n\n\n@Component({\n    selector: 'app-reportgenerator',\n    templateUrl: './reportgenerator.page.html',\n    styleUrls: ['./reportgenerator.page.scss'],\n})\nexport class ReportgeneratorPage implements OnInit {\n\n    data: any;\n    type: string;\n    \n    keys: Array<string>;\n    report_data: Array<any>;\n    profess_id: string;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        public restApi: RestApiService,\n        public authService: AuthenticateService,\n    ) {\n        this.activatedRoute.queryParams.subscribe(params => {\n            if (params && params.type) {\n                this.type = params.type[0].toUpperCase() + params.type.slice(1);\n            }\n            if (params && params.data) {\n                this.data = JSON.parse(params.data);\n                var keys = [];\n                for(let key in this.data) {\n                    keys.push(key);\n                }\n                let datas = [];\n                let continue_index = 0;\n                for ( let i = 0; i < keys.length; i++ ) {\n                    let val_str = '';\n                    if ( keys[i] == \"id\" || keys[i] == \"created_by\" || keys[i] == \"file\" || keys[i] == \"certificate\"  || keys[i] == \"id_no\" || keys[i] == \"user_id\"  || keys[i] == \"is_director\" || keys[i] == \"verified_at\" || keys[i] == \"verified_by\" || keys[i] == \"verify_at\" || keys[i] == \"verify_by\" || keys[i] == \"updated_at\" || keys[i] == \"file\" || keys[i] == \"employer_requirPDF\") {\n                        if ( keys[i] == \"created_by\" || keys[i] == \"user_id\" ) {\n                            this.profess_id = this.data[keys[i]];\n                        }\n                        continue_index++;\n                        continue;\n                    } else if ( keys[i] == \"jtitle\" ){\n                        val_str = \"JOB TITLE \";\n                    } else if ( keys[i].includes('_')) {\n                        let val_strs = keys[i].split('_');\n                        if ( val_strs.length > 2 ) {\n                            for ( let i = 0; i < val_strs.length; i++) {\n                                val_str += val_strs[i].toUpperCase() + \" \";\n                            }\n                        } else if ( val_strs[0] == \"exp\" ) {\n                            val_str = \"EXPERIENCE \" + val_strs[1].toUpperCase();\n                        } \n                        else if ( val_strs[0] == \"pl\" ) {\n                            val_str = \"PROJECT LEADER \" + val_strs[1].toUpperCase();\n                        } else if ( val_strs[0] == \"proj\" ) {\n                            val_str = \"PROJECT \" + val_strs[1].toUpperCase();\n                        } else if ( val_strs[0] == \"prof\" ) {\n                            val_str = \"PROFESS \" + val_strs[1].toUpperCase();\n                        } else {\n                            val_str = val_strs[0].toUpperCase() + \" \" + val_strs[1].toUpperCase();\n                        }\n                    } else {\n                        val_str = keys[i].toUpperCase();\n                    }\n                    let each_row = { id: i+1 - continue_index, key: val_str, val:this.data[keys[i]], status:0 };\n                    datas.push(each_row);\n                }\n                this.report_data = datas;\n            }\n        });\n    }\n\n    ngOnInit() {\n        \n    }\n\n    generate_report() {\n        this.restApi.post('accessor/add-report', {accessor:this.authService.user.name, profess: this.profess_id, report_type:this.type, data:this.report_data, created_by:this.authService.user.userId}).subscribe((res: any) => {\n            if (res && res.status) {\n                console.log(res.data);\n                if (res.status == 'success') {\n                    this.restApi.toast('Generate the report PDF as successfully.', 1200);\n                    this.router.navigateByUrl('home/assessor/accessorsreport');\n                } else {\n                    this.restApi.toast('Please retry to generate the report .', 1200);\n                }\n            }\n        }, error => {\n            console.log(error);\n            this.restApi.toast('Something went wrong.', 1200);\n        });\n    }\n\n    change_status(each_row: any, status: any){\n        if ( status.detail.checked ) {\n            if ( this.report_data[each_row.id] != null ) \n            this.report_data[each_row.id].status = 1;\n        } else {\n            if ( this.report_data[each_row.id] != null ) \n            this.report_data[each_row.id].status = 0;\n        }\n    }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}