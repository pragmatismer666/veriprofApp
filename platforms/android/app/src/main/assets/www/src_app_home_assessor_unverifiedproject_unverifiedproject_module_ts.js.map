{"version":3,"file":"src_app_home_assessor_unverifiedproject_unverifiedproject_module_ts.js","mappings":"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","sources":["./src/app/home/assessor/unverifiedproject/unverifiedproject.module.ts","./src/app/home/assessor/unverifiedproject/unverifiedproject.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { FormsModule } from '@angular/forms';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { UnverifiedprojectPage } from './unverifiedproject.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UnverifiedprojectPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UnverifiedprojectPage]\n})\nexport class UnverifiedprojectPageModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { RestApiService } from \"src/app/services/rest-api.service\";\nimport { AuthenticateService } from \"src/app/services/authentication.service\";\nimport { ToastController, AlertController } from \"@ionic/angular\";\nimport { Router, NavigationExtras } from \"@angular/router\";\n// import { AlertController } from \"ionic-angular\";\n\n\n@Component({\n    selector: \"app-unverifiedproject\",\n    templateUrl: \"./unverifiedproject.page.html\",\n    styleUrls: [\"./unverifiedproject.page.scss\"],\n})\nexport class UnverifiedprojectPage implements OnInit {\n\n    segment: string = \"unverified\";\n    projects: Array<any> = [];\n    verified: Array<any> = [];\n    x: any;\n\n    constructor(\n        public toastController: ToastController,\n        public restApi: RestApiService,\n        private router: Router,\n        public authService: AuthenticateService,\n        public alertController: AlertController,\n    ) { }\n\n    ngOnInit() {\n        this.getUnverifiedProject();\n        this.getVerifiedProject();\n    }\n\n    getUnverifiedProject() {\n        this.restApi.post(\"accessor/get-unverifiedProject\", {}).subscribe((res: any) => {\n            if (res && res.status) {\n                // console.log(res.data);\n                if (res.status == \"success\") {\n                    this.projects = res.data;\n                } else {\n                    this.restApi.toast(res.message, 1200);\n                }\n            }\n        }, error => {\n            console.log(error);\n            this.restApi.toast(\"Something went wrong.\", 1200);\n        });\n    }\n\n    getVerifiedProject() {\n        this.restApi.post(\"accessor/get-verifiedProject\", {}).subscribe((res: any) => {\n            if (res && res.status) {\n                // console.log(res.data);\n                if (res.status == \"success\") {\n                    this.verified = res.data;\n                } else {\n                    this.restApi.toast(res.message, 1200);\n                }\n            }\n        }, error => {\n            console.log(error);\n            this.restApi.toast(\"Something went wrong.\", 1200);\n        });\n    }\n    \n    checkDate(date: string) {\n        return true;\n    }\n\n    async selectDate(x: any) {\n        let nowDateTime = new Date((new Date).getTime() + 60 * 60 * 24 * 1000).toJSON().toString().split(\"T\")[0];\n        const alert = await this.alertController.create({\n            header: \"Please select date\",\n            inputs: [\n                {\n                    name: \"schedule_date\",\n                    placeholder: \"Select DateTime\",\n                    type: \"datetime-local\",\n                    min: `${nowDateTime}T00:00`,\n                }\n            ],\n            buttons: [\n                {\n                    text: \"Cancel\",\n                    role: \"cancel\",\n                    cssClass: \"secondary\",\n                    handler: () => {\n                        console.log(\"Confirm Cancel\");\n                    }\n                },\n                {\n                    text: \"Ok\",\n                    handler: (alertData) => { //takes the data \n                        this.addSchedule(x, alertData.schedule_date);\n                    }\n                }\n            ]\n        });\n\n        await alert.present();\n    }\n\n    addSchedule(x: any, schedule_date: string) {\n        let newSchedule = {\n            verify_user_id: x.created_by,\n            verify_target: \"project\",\n            verify_content_id: x.id,\n            created_by: this.authService.user.userId,\n            date: schedule_date\n        };\n        // console.log(newSchedule);\n        this.restApi.post(\"accessor/add-schedule\", newSchedule).subscribe((res: any) => {\n            console.log(res);\n            if (res && res.status) {\n                this.getUnverifiedProject();\n                this.restApi.toast(\"Added Schedule successfully\", 1200);\n            } else {\n                this.restApi.toast(res.data, 1200);\n            }\n        }, (error) => {\n            console.log(\"unverifiedproject addSchedule error = : \", error);\n            this.restApi.toast(\"Something went wrong.\", 1200);\n        });\n    }\n\n    verifyProject(data: any) {\n        let navigationExtras: NavigationExtras = {\n            queryParams: {\n                data: JSON.stringify(data),\n                type: \"project\",\n            }\n        };\n        this.router.navigate([\"home/assessor/reportgenerator\"], navigationExtras);\n    }\n\n    download(filename: string) {\n        this.restApi.downfile(\"uploads/\", filename);\n    }\n}\n"],"names":[],"sourceRoot":"webpack:///"}