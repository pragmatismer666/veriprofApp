{"version":3,"sources":["webpack:///./src/app/home/assessor/schedules/schedules.module.ts","webpack:///./src/app/home/assessor/schedules/schedules.page.html","webpack:///./src/app/home/assessor/schedules/schedules.page.scss","webpack:///./src/app/home/assessor/schedules/schedules.page.ts"],"names":[],"mappings":"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","file":"schedules-schedules-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { SchedulesPage } from './schedules.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SchedulesPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule, \n    IonicModule,\n    // Validators,\n    RouterModule.forChild(routes),\n  ],\n  declarations: [SchedulesPage]\n})\nexport class SchedulesPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"dark\\\">\\n        <ion-back-button slot=\\\"start\\\"></ion-back-button>\\n        <ion-title>Schedules</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <form class=\\\"schedule_line\\\" [formGroup]=\\\"schedule_form\\\" (ngSubmit)=\\\"schedule_confirm(schedule_form.value)\\\">\\n        <ion-item color=\\\"\\\" class=\\\"\\\" style=\\\"margin-top:30px\\\">\\n            <ion-label position=\\\"floating\\\" color=\\\"\\\" class=\\\"inner\\\"></ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"name\\\" color=\\\"\\\" class=\\\"inner\\\" [readonly]=\\\"true\\\"\\n                value={{this.authService.userDetails().name}}></ion-input>\\n        </ion-item>\\n        <br>\\n        <br>\\n        <ion-item color=\\\"\\\" class=\\\"\\\">\\n            <ion-label position=\\\"floating\\\" color=\\\"\\\" class=\\\"inner\\\">Verify Target Email</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"verify_target\\\" color=\\\"\\\" class=\\\"inner\\\"\\n                value={{schedule_form.verify_target}}></ion-input>\\n        </ion-item>\\n        <br>\\n        <br>\\n        <ion-item color=\\\"\\\">\\n            <ion-label position=\\\"floating\\\" color=\\\"\\\" class=\\\"inner\\\">Location</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"location\\\" color=\\\"\\\" class=\\\"inner\\\" value={{schedule_form.location}}>\\n            </ion-input>\\n        </ion-item>\\n        <br>\\n        <br>\\n        <ion-segment>\\n            <ion-item color=\\\"\\\">\\n                <ion-label position=\\\"floating\\\" color=\\\"\\\" class=\\\"inner\\\">Meet DateTime</ion-label>\\n                <ion-datetime displayFormat=\\\"YYYY-MM-DDTHH:mm\\\" formControlName=\\\"date\\\" class=\\\"inner\\\"\\n                    placeholder=\\\"YYYY-MM-DDTHH:mm\\\" value={{schedule_form.date}}></ion-datetime>\\n            </ion-item>\\n            <div class=\\\"validation-errors\\\">\\n                <ng-container *ngFor=\\\"let validation of validation_messages.profess\\\">\\n                    <div class=\\\"error-message\\\"\\n                        *ngIf=\\\"schedule_form.get('location').hasError(validation.type) && (schedule_form.get('location').dirty)\\\">\\n                        {{ validation.message }}\\n                    </div>\\n                </ng-container>\\n            </div>\\n            <ion-button color=\\\"submit-btn schedule_btn\\\" style=\\\"margin-top:15px;\\\" type=\\\"submit\\\"\\n                [disabled]=\\\"!schedule_form.valid\\\" color=\\\"success\\\">Confirm</ion-button>\\n        </ion-segment>\\n    </form>\\n\\n    <table class=\\\"table\\\" style=\\\"width:96%;margin: 2%;margin-top:40px; font-size: 11px;\\\">\\n        <tr>\\n            <th>Name</th>\\n            <th>Verify Target</th>\\n            <th>DateTime</th>\\n            <th>Location</th>\\n        </tr>\\n        <tr *ngFor=\\\"let x of objs\\\">\\n            <td>{{x.name}}</td>\\n            <td>{{x.verify_target}}</td>\\n            <td>{{x.date.split('.')[0]}}</td>\\n            <td>{{x.location}}</td>\\n        </tr>\\n    </table>\\n</ion-content>\"","module.exports = \".schedule_line {\\n  margin: 15px;\\n  margin-left: 30px;\\n  margin-right: 30px; }\\n\\n.schedule_btn {\\n  margin: auto; }\\n\\n.table {\\n  margin: auto;\\n  margin-top: 25px;\\n  font-size: 10px;\\n  min-width: 90%; }\\n\\n.table th {\\n    background: #8a8a8a;\\n    padding: 5px;\\n    color: #fff;\\n    border: 1px solid #fff; }\\n\\n.table td {\\n    background: #ccc;\\n    padding: 5px;\\n    color: #000;\\n    border: 1px solid #fff; }\\n\\n.scrollH {\\n  overflow-x: auto; }\\n\\n.validation-errors {\\n  color: #000; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9hc3Nlc3Nvci9zY2hlZHVsZXMvRzpcXGlvbmljXFxpb25pY19hcHBcXHZlcmlwcm9mLWFwcC9zcmNcXGFwcFxcaG9tZVxcYXNzZXNzb3JcXHNjaGVkdWxlc1xcc2NoZWR1bGVzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQVk7RUFDWixpQkFBZ0I7RUFDaEIsa0JBQWlCLEVBQUE7O0FBRXJCO0VBQ0ksWUFBWSxFQUFBOztBQUVoQjtFQUNJLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLGNBQWMsRUFBQTs7QUFKbEI7SUFNUSxtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLFdBQVc7SUFDWCxzQkFBc0IsRUFBQTs7QUFUOUI7SUFhUSxnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLFdBQVc7SUFDWCxzQkFBc0IsRUFBQTs7QUFJOUI7RUFDSSxnQkFBZ0IsRUFBQTs7QUFFcEI7RUFDSSxXQUFXLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9ob21lL2Fzc2Vzc29yL3NjaGVkdWxlcy9zY2hlZHVsZXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNjaGVkdWxlX2xpbmV7XHJcbiAgICBtYXJnaW46IDE1cHg7XHJcbiAgICBtYXJnaW4tbGVmdDozMHB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OjMwcHg7XHJcbn1cclxuLnNjaGVkdWxlX2J0bntcclxuICAgIG1hcmdpbjogYXV0bztcclxufVxyXG4udGFibGV7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAyNXB4O1xyXG4gICAgZm9udC1zaXplOiAxMHB4O1xyXG4gICAgbWluLXdpZHRoOiA5MCU7XHJcbiAgICB0aHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjOGE4YThhO1xyXG4gICAgICAgIHBhZGRpbmc6IDVweDtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xyXG4gICAgfVxyXG5cclxuICAgIHRke1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICNjY2M7XHJcbiAgICAgICAgcGFkZGluZzogNXB4O1xyXG4gICAgICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5zY3JvbGxIIHtcclxuICAgIG92ZXJmbG93LXg6IGF1dG87XHJcbn1cclxuLnZhbGlkYXRpb24tZXJyb3Jze1xyXG4gICAgY29sb3I6ICMwMDA7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from 'src/app/services/rest-api.service';\nimport { AuthenticateService } from 'src/app/services/authentication.service';\nimport { ToastController } from '@ionic/angular';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\n\n@Component({\n    selector: 'app-schedules',\n    templateUrl: './schedules.page.html',\n    styleUrls: ['./schedules.page.scss'],\n})\n\nexport class SchedulesPage implements OnInit {\n\n    objs: Array<any>;\n    schedule_form: FormGroup;\n    validation_messages = {\n        'location': [\n            { type: 'required', message: 'Location is required.' },\n            { type: 'minlength', message: 'Location must be at least 3 letter long.' }\n        ],\n        'verify_target': [\n            { type: 'required', message: 'Contact Person is required.' },\n            { type: 'minlength', message: 'Contact Person must be at least 3 letter long.' }\n        ],\n        'date': [\n            { type: 'required', message: 'Date is required.' },\n            { type: 'minlength', message: 'Please set date.' }\n        ]\n    };\n\n    constructor(\n        public toastController: ToastController,\n        public restApi: RestApiService,\n        public authService: AuthenticateService,\n        private formBuilder: FormBuilder) { }\n\n    ngOnInit() {\n        this.schedule_form = this.formBuilder.group({\n            name: new FormControl(this.authService.userDetails().name.toString()),\n            verify_target: new FormControl('', Validators.compose([\n                Validators.minLength(3),\n                Validators.required\n            ])),\n            date: new FormControl('', Validators.compose([\n                Validators.minLength(3),\n                Validators.required\n            ])),\n            location: new FormControl('', Validators.compose([\n                Validators.minLength(3),\n                Validators.required\n            ]))\n        });\n        this.get_schedule();\n    }\n\n    get_schedule() {\n        console.log(this.authService.userDetails().name, this.authService.user.userId);\n        this.restApi.get('accessor/get-schedule').subscribe((res: any) => {\n            if (res) {\n                console.log(res);\n                if (res.status == 'success') {\n                    this.objs = res.data;\n                }\n            }\n        }, error => {\n            this.toastController.create({\n                message: 'Something went wrong.',\n                duration: 2000\n            }).then(toast => toast.present());\n        });\n    }\n\n    schedule_confirm(value) {\n        this.restApi.post('accessor/put-Schedule', { user_id: this.authService.user.userId, data: value }).subscribe((res: any) => {\n            if (res && res.status) {\n                if (res.status == 'success') {\n                    this.objs = res.data;\n                }\n                this.toastController.create({\n                    message: res.message,\n                    duration: 2000\n                }).then(toast => toast.present());\n            }\n        }, error => {\n            this.toastController.create({\n                message: 'Something went wrong.',\n                duration: 2000\n            }).then(toast => toast.present());\n        });\n        // this.schedule_form.reset();\n        // this.get_schedule();\n    }\n}\n"],"sourceRoot":""}