{"version":3,"sources":["webpack:///./src/app/home/assessor/accessorsreport/accessorsreport.module.ts","webpack:///./src/app/home/assessor/accessorsreport/accessorsreport.page.html","webpack:///./src/app/home/assessor/accessorsreport/accessorsreport.page.scss","webpack:///./src/app/home/assessor/accessorsreport/accessorsreport.page.ts"],"names":[],"mappings":"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","file":"accessorsreport-accessorsreport-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AccessorsreportPage } from './accessorsreport.page';\nimport { FileOpener } from '@ionic-native/file-opener/ngx';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { SuperTabsModule } from '@ionic-super-tabs/angular';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccessorsreportPage,\n  },\n  { path: 'reportgenerator', loadChildren: './reportgenerator/reportgenerator.module#ReportgeneratorPageModule' },\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    SuperTabsModule,\n    RouterModule.forChild(routes),\n  ],\n  // providers:[\n  //   FileOpener,\n  //   { provide: RouteReuseStrategy, useClass: IonicRouteStrategy }\n  // ],\n  declarations: [AccessorsreportPage],\n})\nexport class AccessorsreportPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"dark\\\">\\n        <ion-back-button slot=\\\"start\\\"></ion-back-button>\\n        <ion-title>Assessors Report</ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<!-- <ion-content>\\n    <form class=\\\"schedule_line\\\" [formGroup]=\\\"report_form\\\" (ngSubmit)=\\\"report_confirm(report_form.value)\\\">\\n        <ion-item color=\\\"\\\" class=\\\"report_line\\\">\\n            <ion-label position=\\\"floating\\\" color=\\\"\\\" class=\\\"inner\\\"></ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"accessor\\\" color=\\\"\\\" class=\\\"inner\\\" [readonly]=\\\"true\\\"></ion-input>\\n        </ion-item>\\n        <br>\\n        <ion-item>\\n            <ion-label position=\\\"floating\\\" color=\\\"\\\" class=\\\"inner\\\" style=\\\"margin-bottom:5px ;\\\">Report Type</ion-label>\\n            <ion-select multiple=\\\"false\\\" formControlName=\\\"report_type\\\" Placeholder=\\\"Select Report Type\\\"\\n                (ngModelChange)=\\\"getType($event)\\\">\\n                <ion-select-option value=\\\"Project submission\\\"> Project submission Report</ion-select-option>\\n                <ion-select-option value=\\\"Business Registration\\\">Business Registration Report</ion-select-option>\\n                <ion-select-option value=\\\"ePlan submission Report\\\">ePlan submission Report</ion-select-option>\\n                <ion-select-option value=\\\"Quick Verify Request Report\\\">Quick Verify Request Report</ion-select-option>\\n                <ion-select-option value=\\\"Profile Report\\\">Profile Report</ion-select-option>\\n            </ion-select>\\n        </ion-item>\\n        <br>\\n        <ion-item>\\n            <ion-label position=\\\"floating\\\" color=\\\"\\\" class=\\\"inner\\\" style=\\\"margin-bottom:5px ;\\\">Professional Name\\n            </ion-label>\\n            <ion-select placeholder=\\\"Select Professional Name\\\" formControlName=\\\"profess_name\\\" multiple='false'>\\n                <ng-container *ngFor=\\\"let x of profess\\\">\\n                    <ion-select-option *ngIf=\\\"x.reg_number != ''\\\">{{x.name}}</ion-select-option>\\n                </ng-container>\\n            </ion-select>\\n        </ion-item>\\n        <br>\\n        <ion-item>\\n            <ion-label position=\\\"floating\\\" class=\\\"inner\\\">Report Title</ion-label>\\n            <ion-input type=\\\"text\\\" formControlName=\\\"report_title\\\" color=\\\"\\\" class=\\\"inner\\\"></ion-input>\\n        </ion-item>\\n        <div class=\\\"validation-errors schedule_line\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.report_title\\\">\\n                <div class=\\\"error-message\\\"\\n                    *ngIf=\\\"report_form.get('report_title').hasError(validation.type) && (report_form.get('report_title').dirty)\\\">\\n                    {{ validation.message }}\\n                </div>\\n            </ng-container>\\n        </div>\\n        <ion-item>\\n            <ion-label position=\\\"floating\\\" class=\\\"inner\\\">Report Content</ion-label>\\n            <ion-textarea rows=\\\"3\\\" position=\\\"floating\\\" class=\\\"inner\\\" formControlName=\\\"report_content\\\"\\n                placeholder=\\\"Please write report about the Project.\\\">\\n            </ion-textarea>\\n        </ion-item>\\n        <br>\\n        <ion-row>\\n            <ion-button style=\\\"width: 100%;\\\" type=\\\"submit\\\" [disabled]=\\\"!report_form.valid\\\" color=\\\"success\\\">Confirm to\\n                build report</ion-button>\\n        </ion-row>\\n    </form>\\n</ion-content> -->\\n\\n<super-tabs activeTabIndex=\\\"0\\\"\\n    [config]=\\\"{ debug: true, sideMenu: 'left', allowElementScroll: true, nativeSmoothScroll: true }\\\">\\n    <super-tabs-toolbar slot=\\\"bottom\\\">\\n        <super-tab-button>\\n            <ion-label>Project</ion-label>\\n        </super-tab-button>\\n        <!-- <super-tab-button>\\n            <ion-label>Eplan</ion-label>\\n        </super-tab-button> -->\\n        <!-- <super-tab-button>\\n            <ion-label>News</ion-label>\\n        </super-tab-button> -->\\n        <super-tab-button>\\n            <ion-label>Profile</ion-label>\\n        </super-tab-button>\\n        <super-tab-button>\\n            <ion-label>Business</ion-label>\\n        </super-tab-button>\\n    </super-tabs-toolbar>\\n    <super-tabs-container autoScrollTop>\\n        <super-tab >\\n            <h4 class=\\\"title-center\\\">Project Submission</h4>\\n            <div class=\\\"scrollH\\\">\\n                <table class=\\\"table\\\">\\n                    <tr>\\n                        <th>Title</th>\\n                        <th>Type</th>\\n                        <th>client Name</th>\\n                        <th>Leader Name</th>\\n                        <th>Status</th>\\n                        <th>Action</th>\\n                    </tr>\\n                    <tr *ngFor=\\\"let project of projects\\\">\\n                        <td>{{project.title}}</td>\\n                        <td>{{project.type}}</td>\\n                        <td>{{project.client_name}}</td>\\n                        <td>{{project.pl_name}}</td>\\n                        <td>{{project.status}}</td>\\n                        <td class=\\\"d-flex\\\" (click)=\\\"action(project, 'project')\\\">Verify</td>\\n                    </tr>\\n                </table>\\n            </div>\\n        </super-tab>\\n        <!-- <super-tab>\\n            <h4 class=\\\"title-center\\\">Eplan Submission</h4>\\n            <div class=\\\"scrollH\\\">\\n                <table class=\\\"table\\\">\\n                    <tr>\\n                        <th>Code</th>\\n                        <th>Project Title</th>\\n                        <th>Prof Name</th>\\n                        <th>Client Name</th>\\n                        <th>Action</th>\\n                    </tr>\\n                    <tr *ngFor=\\\"let eplan of eplans\\\">\\n                        <td>{{eplan.verify_code}}</td>\\n                        <td>{{eplan.project_title}}</td>\\n                        <td>{{eplan.professional_name}}</td>\\n                        <td>{{eplan.client_name}}</td>\\n                        <td class=\\\"d-flex\\\" (click)=\\\"action(eplan, 'eplan')\\\">Verify</td>\\n                    </tr>\\n                </table>\\n            </div>\\n        </super-tab> -->\\n        <!-- <super-tab>\\n        </super-tab> -->\\n        <super-tab>\\n            <h4 class=\\\"title-center\\\">Profile Submission</h4>\\n            <div class=\\\"scrollH\\\">\\n                <table class=\\\"table\\\">\\n                    <tr>\\n                        <th>Name</th>\\n                        <th>Council</th>\\n                        <th>Experience</th>\\n                        <th>Job</th>\\n                        <th>Action</th>\\n                    </tr>\\n                    <tr *ngFor=\\\"let profile of unverified_profiles\\\">\\n                        <td>{{profile.name}}</td>\\n                        <td>{{profile.council}}</td>\\n                        <td>{{profile.exp_year}}</td>\\n                        <td>{{profile.jtitle}}</td>\\n                        <td class=\\\"d-flex\\\" (click)=\\\"action(profile, 'profile')\\\">Verify</td>\\n                    </tr>\\n                </table>\\n            </div>\\n        </super-tab>\\n        <super-tab>\\n            <h4 class=\\\"title-center\\\">Business Submission</h4>\\n            <div class=\\\"scrollH\\\">\\n                <table class=\\\"table\\\">\\n                    <tr>\\n                        <th>Name</th>\\n                        <th>Council reg No</th>\\n                        <th>Type of Organization</th>\\n                        <th>Directors</th>\\n                        <th>Action</th>\\n                    </tr>\\n                    <tr *ngFor=\\\"let business of unverified_business\\\">\\n                        <td>{{business.pname}}</td>\\n                        <td>{{business.pcouncil}}</td>\\n                        <td>{{business.ptype}}</td>\\n                        <td>{{business.director}}</td>\\n                        <td class=\\\"d-flex\\\" (click)=\\\"action(business, 'business')\\\">Verify</td>\\n                    </tr>\\n                </table>\\n            </div>\\n        </super-tab>\\n    </super-tabs-container>\\n</super-tabs>\\n<!-- <ion-footer color=\\\"dark\\\" class=\\\"footer\\\">\\n  <ion-toolbar color=\\\"\\\">\\n    <ion-title class=\\\"footer\\\">Copyright SIVAGO </ion-title>\\n  </ion-toolbar>\\n</ion-footer> -->\"","module.exports = \".schedule_line {\\n  margin-top: 25px !important;\\n  margin-left: 30px !important;\\n  margin-right: 30px !important; }\\n\\n.table {\\n  margin: auto;\\n  font-size: 10px;\\n  min-width: 88%;\\n  max-width: 90%; }\\n\\n.table th {\\n    background: #8a8a8a;\\n    padding: 5px;\\n    color: #fff;\\n    border: 1px solid #fff; }\\n\\n.table td {\\n    background: #ccc;\\n    padding: 5px;\\n    color: #000;\\n    border: 1px solid #fff; }\\n\\n.scrollH {\\n  overflow-x: auto; }\\n\\n.validation-errors {\\n  color: #000; }\\n\\n.footer {\\n  font-size: 12px;\\n  color: #6d6d6d; }\\n\\n.title-center {\\n  text-align: center; }\\n\\nsuper-tabs-container super-tab {\\n  background-color: #363636;\\n  color: blanchedalmond; }\\n\\nsuper-tabs-container super-tab ion-input {\\n  color: blanchedalmond; }\\n\\nsuper-tabs-container super-tab ion-card {\\n  margin-left: 10%;\\n  margin-right: 10%; }\\n\\nsuper-tabs super-tabs-toolbar {\\n  background-color: black;\\n  color: blanchedalmond; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9hc3Nlc3Nvci9hY2Nlc3NvcnNyZXBvcnQvRzpcXGlvbmljXFxpb25pY19hcHBcXHZlcmlwcm9mLWFwcC9zcmNcXGFwcFxcaG9tZVxcYXNzZXNzb3JcXGFjY2Vzc29yc3JlcG9ydFxcYWNjZXNzb3JzcmVwb3J0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDJCQUEyQjtFQUMzQiw0QkFBMkI7RUFDM0IsNkJBQTRCLEVBQUE7O0FBR2hDO0VBQ0ksWUFBWTtFQUNaLGVBQWU7RUFDZixjQUFjO0VBQ2QsY0FBYyxFQUFBOztBQUpsQjtJQU1RLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1osV0FBVztJQUNYLHNCQUFzQixFQUFBOztBQVQ5QjtJQWFRLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osV0FBVztJQUNYLHNCQUFzQixFQUFBOztBQUk5QjtFQUNJLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLFdBQVcsRUFBQTs7QUFHZjtFQUNJLGVBQWU7RUFDZixjQUF5QixFQUFBOztBQUk3QjtFQUNJLGtCQUFrQixFQUFBOztBQUd0QjtFQUNJLHlCQUF5QjtFQUN6QixxQkFBcUIsRUFBQTs7QUFHekI7RUFDSSxxQkFBcUIsRUFBQTs7QUFHekI7RUFDSSxnQkFBZ0I7RUFDaEIsaUJBQWlCLEVBQUE7O0FBR3JCO0VBQ0ksdUJBQXVCO0VBQ3ZCLHFCQUFxQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9hc3Nlc3Nvci9hY2Nlc3NvcnNyZXBvcnQvYWNjZXNzb3JzcmVwb3J0LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zY2hlZHVsZV9saW5le1xyXG4gICAgbWFyZ2luLXRvcDogMjVweCAhaW1wb3J0YW50OyBcclxuICAgIG1hcmdpbi1sZWZ0OjMwcHggIWltcG9ydGFudDtcclxuICAgIG1hcmdpbi1yaWdodDozMHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi50YWJsZXtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIGZvbnQtc2l6ZTogMTBweDtcclxuICAgIG1pbi13aWR0aDogODglO1xyXG4gICAgbWF4LXdpZHRoOiA5MCU7XHJcbiAgICB0aHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjOGE4YThhO1xyXG4gICAgICAgIHBhZGRpbmc6IDVweDtcclxuICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xyXG4gICAgfVxyXG5cclxuICAgIHRke1xyXG4gICAgICAgIGJhY2tncm91bmQ6ICNjY2M7XHJcbiAgICAgICAgcGFkZGluZzogNXB4O1xyXG4gICAgICAgIGNvbG9yOiAjMDAwO1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XHJcbiAgICB9XHJcbn1cclxuXHJcbi5zY3JvbGxIIHtcclxuICAgIG92ZXJmbG93LXg6IGF1dG87XHJcbn1cclxuXHJcbi52YWxpZGF0aW9uLWVycm9yc3tcclxuICAgIGNvbG9yOiAjMDAwO1xyXG59XHJcblxyXG4uZm9vdGVyIHtcclxuICAgIGZvbnQtc2l6ZTogMTJweDtcclxuICAgIGNvbG9yOiByZ2IoMTA5LCAxMDksIDEwOSk7XHJcbn1cclxuXHJcbi8vIHRleHQgY2VudGVyIGFsaWduXHJcbi50aXRsZS1jZW50ZXJ7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuLy8gc3VwZXIgdGFiIHN0eWxlXHJcbnN1cGVyLXRhYnMtY29udGFpbmVyIHN1cGVyLXRhYiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzYzNjM2O1xyXG4gICAgY29sb3I6IGJsYW5jaGVkYWxtb25kO1xyXG59XHJcblxyXG5zdXBlci10YWJzLWNvbnRhaW5lciBzdXBlci10YWIgaW9uLWlucHV0IHtcclxuICAgIGNvbG9yOiBibGFuY2hlZGFsbW9uZDtcclxufVxyXG5cclxuc3VwZXItdGFicy1jb250YWluZXIgc3VwZXItdGFiIGlvbi1jYXJkIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMCU7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwJTtcclxufVxyXG5cclxuc3VwZXItdGFicyBzdXBlci10YWJzLXRvb2xiYXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICBjb2xvcjogYmxhbmNoZWRhbG1vbmQ7XHJcbn0iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { RestApiService } from 'src/app/services/rest-api.service';\nimport { AuthenticateService } from 'src/app/services/authentication.service';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ToastController } from '@ionic/angular';\nimport { LoadingController } from '@ionic/angular';\nimport { Router, NavigationExtras } from '@angular/router';\nimport { SuperTabs } from '@ionic-super-tabs/angular';\nimport { SuperTabsConfig } from '@ionic-super-tabs/core';\n\n@Component({\n    selector: 'app-accessorsreport',\n    templateUrl: './accessorsreport.page.html',\n    styleUrls: ['./accessorsreport.page.scss'],\n})\nexport class AccessorsreportPage implements OnInit {\n\n    @ViewChild(SuperTabs) superTabs: SuperTabs;\n    \n    config: SuperTabsConfig = {\n        debug: true,\n        allowElementScroll: false,\n    }; \n\n    projects: Array<any>;\n    unverified_business:Array<any>;\n    unverified_profiles:Array<any>;\n    eplans: Array<any>;\n\n    objs: Array<any>;\n    accessor_name: String;\n    report_form: FormGroup;\n    profess: Array<any>;\n    loading: any;\n\n    validation_messages = {\n        'report_title': [\n            { type: 'required', message: 'Report Title is required.' }\n        ],\n        'profess_name': [\n            { type: 'required', message: 'Professional Name is required.' }\n        ],\n        'report_content': [\n            { type: 'required', message: 'Report Content is required.' }\n        ]\n    };\n\n    constructor(\n        public toastController: ToastController,\n        public restApi: RestApiService,\n        public authService: AuthenticateService,\n        private formBuilder: FormBuilder,\n        public loadingCtrl: LoadingController,\n        public nav: NavController,\n        private router: Router,\n    ) { }\n\n    ngOnInit() {\n        this.report_form = this.formBuilder.group({\n            accessor: new FormControl('', Validators.compose([\n                Validators.required\n            ])),\n            report_type: new FormControl(),\n            report_title: new FormControl('', Validators.compose([\n                Validators.required\n            ])),\n            profess_name: new FormControl('', Validators.compose([\n                Validators.required\n            ])),\n            report_content: new FormControl('', Validators.compose([\n                Validators.required\n            ]))\n        });\n        this.accessor_name = String(this.authService.user.name);\n        this.report_form.get('accessor').setValue(this.accessor_name);\n        this.getRegisteredProfess();\n        \n        this.getProjects();\n        this.get_unverified_business();\n        this.get_unverified_profile();\n        this.get_eplan();\n    }\n\n    // project submission\n    getProjects(){\n        this.restApi.get('accessor/get-projects').subscribe((res: any) => {\n            if (res && res.status) {\n                console.log(res.data);\n                if (res.status == 'success') {\n                    this.projects = res.data;\n                } else {\n                    this.restApi.toast('There is no projects.', 1200);\n                }\n            }\n        }, error => {\n            console.log(error);\n            this.restApi.toast('Something went wrong.', 1200);\n        });\n    }\n    // Business Submission\n    get_unverified_business(){\n        this.restApi.get('accessor/get-unverifyBusiness').subscribe((res: any) => {\n            if (res && res.status) {\n                console.log(res.data);\n                if (res.status == 'success') {\n                    this.unverified_business = res.data;\n                } else {\n                    this.restApi.toast('There is no projects.', 1200);\n                }\n            }\n        }, error => {\n            console.log(error);\n            this.restApi.toast('Something went wrong.', 1200);\n        });\n    }\n    // Profile Submission\n    get_unverified_profile(){\n        this.restApi.get('accessor/get-unverifyProfiles').subscribe((res: any) => {\n            if (res && res.status) {\n                if (res.status == 'success') {\n                    this.unverified_profiles = res.data;\n                } else {\n                    this.restApi.toast('There is no projects.', 1200);\n                }\n            }\n        }, error => {\n            console.log(error);\n            this.restApi.toast('Something went wrong.', 1200);\n        });\n    }\n    // Eplan Submission\n    get_eplan(){\n        this.restApi.get('accessor/get-eplans').subscribe((res: any) => {\n            if (res && res.status) {\n                if (res.status == 'success') {\n                    this.eplans = res.data;\n                } else {\n                    this.restApi.toast('There is no projects.', 1200);\n                }\n            }\n        }, error => {\n            console.log(error);\n            this.restApi.toast('Something went wrong.', 1200);\n        });\n    }\n    // action \n    action(data:any, type: string){\n        let navigationExtras: NavigationExtras = {\n            queryParams: {\n              data: JSON.stringify(data),\n              type: type,\n            }\n        };\n        this.router.navigate(['home/assessor/accessorsreport/reportgenerator'], navigationExtras);\n    }\n\n    report_confirm(value: any) {\n        this.restApi.post('accessor/add-report', { user_id: this.authService.user.userId, user_name: this.authService.user.name, data: value }).subscribe((res: any) => {\n            if (res && res.status) {\n                if (res.data == \"limited\") {\n                    this.toastController.create({ message: res.message, duration: 2000 }).then(toast => toast.present());\n                }\n                else {\n                    this.toastController.create({ message: res.message, duration: 2000 }).then(toast => toast.present());\n                }\n                this.report_form.reset();\n                this.report_form.get('accessor').setValue(String(this.authService.user.name));\n                this.getRegisteredProfess();\n            }\n        }, error => {\n            this.toastController.create({\n                message: 'Something went wrong.',\n                duration: 2000\n            }).then(toast => toast.present());\n        });\n    }\n\n    getRegisteredProfess() {\n        this.restApi.get('professional/get-profess').subscribe((res: any) => {\n            if (res && res.status) {\n                this.profess = res.data;\n            }\n        }, error => {\n            this.toastController.create({\n                message: 'Something went wrong.',\n                duration: 2000\n            }).then(toast => toast.present());\n        });\n    }\n\n    // getType(event: any) {\n    //     console.log(this.report_form);\n    //     console.log(event);\n    // }\n}\n"],"sourceRoot":""}