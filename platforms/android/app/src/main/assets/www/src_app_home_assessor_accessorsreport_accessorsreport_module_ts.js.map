{"version":3,"file":"src_app_home_assessor_accessorsreport_accessorsreport_module_ts.js","mappings":"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","sources":["./src/app/home/assessor/accessorsreport/accessorsreport.module.ts","./src/app/home/assessor/accessorsreport/accessorsreport.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AccessorsreportPage } from './accessorsreport.page';\n\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccessorsreportPage,\n  },\n  { path: 'reportgenerator', loadChildren: () => import('./reportgenerator/reportgenerator.module').then(m => m.ReportgeneratorPageModule) },\n  // './reportgenerator/reportgenerator.module#ReportgeneratorPageModule'\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n  ],\n  // providers:[\n  //   FileOpener,\n  //   { provide: RouteReuseStrategy, useClass: IonicRouteStrategy }\n  // ],\n  declarations: [AccessorsreportPage],\n})\nexport class AccessorsreportPageModule {}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NavController } from '@ionic/angular';\nimport { RestApiService } from 'src/app/services/rest-api.service';\nimport { AuthenticateService } from 'src/app/services/authentication.service';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ToastController } from '@ionic/angular';\nimport { LoadingController } from '@ionic/angular';\nimport { Router, NavigationExtras } from '@angular/router';\n\n@Component({\n    selector: 'app-accessorsreport',\n    templateUrl: './accessorsreport.page.html',\n    styleUrls: ['./accessorsreport.page.scss'],\n})\nexport class AccessorsreportPage implements OnInit {\n\n    assessor_report: string = \"projectp\";\n\n    projects: Array<any>;\n    unverified_business:Array<any>;\n    unverified_profiles:Array<any>;\n    eplans: Array<any>;\n\n    objs: Array<any>;\n    accessor_name: String;\n    report_form: FormGroup;\n    profess: Array<any>;\n    loading: any;\n\n    validation_messages = {\n        'report_title': [\n            { type: 'required', message: 'Report Title is required.' }\n        ],\n        'profess_name': [\n            { type: 'required', message: 'Professional Name is required.' }\n        ],\n        'report_content': [\n            { type: 'required', message: 'Report Content is required.' }\n        ]\n    };\n\n    constructor(\n        public toastController: ToastController,\n        public restApi: RestApiService,\n        public authService: AuthenticateService,\n        private formBuilder: FormBuilder,\n        public loadingCtrl: LoadingController,\n        public nav: NavController,\n        private router: Router,\n    ) { }\n\n    ngOnInit() {\n        this.report_form = this.formBuilder.group({\n            accessor: new FormControl('', Validators.compose([\n                Validators.required\n            ])),\n            report_type: new FormControl(),\n            report_title: new FormControl('', Validators.compose([\n                Validators.required\n            ])),\n            profess_name: new FormControl('', Validators.compose([\n                Validators.required\n            ])),\n            report_content: new FormControl('', Validators.compose([\n                Validators.required\n            ]))\n        });\n        this.accessor_name = String(this.authService.user.name);\n        this.report_form.get('accessor').setValue(this.accessor_name);\n        this.getRegisteredProfess();\n        \n        this.getProjects();\n        this.get_unverified_business();\n        this.get_unverified_profile();\n        this.get_eplan();\n    }\n\n    // project submission\n    getProjects(){\n        this.restApi.get('accessor/get-projects').subscribe((res: any) => {\n            if (res && res.status) {\n                console.log(res.data);\n                if (res.status == 'success') {\n                    this.projects = res.data;\n                } else {\n                    this.restApi.toast('There is no projects.', 1200);\n                }\n            }\n        }, error => {\n            console.log(error);\n            this.restApi.toast('Something went wrong.', 1200);\n        });\n    }\n\n    // Business Submission\n    get_unverified_business(){\n        this.restApi.get('accessor/get-unverifyBusiness').subscribe((res: any) => {\n            if (res && res.status) {\n                console.log(res.data);\n                if (res.status == 'success') {\n                    this.unverified_business = res.data;\n                } else {\n                    this.restApi.toast('There is no projects.', 1200);\n                }\n            }\n        }, error => {\n            console.log(error);\n            this.restApi.toast('Something went wrong.', 1200);\n        });\n    }\n\n    // Profile Submission\n    get_unverified_profile(){\n        this.restApi.get('accessor/get-unverifyProfiles').subscribe((res: any) => {\n            console.log( res.data );\n            if (res && res.status) {\n                if (res.status == 'success') {\n                    this.unverified_profiles = res.data;\n                } else {\n                    this.restApi.toast('There is no projects.', 1200);\n                }\n            }\n        }, error => {\n            console.log(error);\n            this.restApi.toast('Something went wrong.', 1200);\n        });\n    }\n\n    // Eplan Submission\n    get_eplan(){\n        this.restApi.get('accessor/get-eplans').subscribe((res: any) => {\n            if (res && res.status) {\n                if (res.status == 'success') {\n                    this.eplans = res.data;\n                } else {\n                    this.restApi.toast('There is no projects.', 1200);\n                }\n            }\n        }, error => {\n            console.log(error);\n            this.restApi.toast('Something went wrong.', 1200);\n        });\n    }\n\n    // action \n    action(data:any, type: string){\n        let navigationExtras: NavigationExtras = {\n            queryParams: {\n              data: JSON.stringify(data),\n              type: type,\n            }\n        };\n        this.router.navigate(['home/assessor/accessorsreport/reportgenerator'], navigationExtras);\n    }\n\n    download(type:string ,filename : string ) {\n        this.restApi.downfile(type + '/', filename);\n    }\n\n    report_confirm(value: any) {\n        this.restApi.post('accessor/add-report', { user_id: this.authService.user.userId, user_name: this.authService.user.name, data: value }).subscribe((res: any) => {\n            if (res && res.status) {\n                if (res.data == \"limited\") {\n                    this.toastController.create({ message: res.message, duration: 2000 }).then(toast => toast.present());\n                }\n                else {\n                    this.toastController.create({ message: res.message, duration: 2000 }).then(toast => toast.present());\n                }\n                this.report_form.reset();\n                this.report_form.get('accessor').setValue(String(this.authService.user.name));\n                this.getRegisteredProfess();\n            }\n        }, error => {\n            this.toastController.create({\n                message: 'Something went wrong.',\n                duration: 2000\n            }).then(toast => toast.present());\n        });\n    }\n\n    getRegisteredProfess() {\n        this.restApi.get('professional/get-profess').subscribe((res: any) => {\n            if (res && res.status) {\n                this.profess = res.data;\n            }\n        }, error => {\n            this.toastController.create({\n                message: 'Something went wrong.',\n                duration: 2000\n            }).then(toast => toast.present());\n        });\n    }\n\n}\n"],"names":[],"sourceRoot":"webpack:///"}