{"version":3,"file":"src_app_auth_auth_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACmB;AACX;AACV;AAEN;AACQ;AACS;AACN;AAElD,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gDAAQ;QACnB,QAAQ,EAAE;YACN,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,wDAAS,EAAE;YAC7C,EAAE,IAAI,EAAE,gBAAgB,EAAE,SAAS,EAAE,iEAAY,EAAE;YACnD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,2DAAU,EAAE;SAClD;KACJ;CACJ,CAAC;IAYW,cAAc,SAAd,cAAc;CAAI;AAAlB,cAAc;IAV1B,uDAAQ,CAAC;QACN,OAAO,EAAE;YACL,yDAAY;YACZ,uDAAW;YACX,+DAAmB;YACnB,uDAAW;YACX,kEAAqB,CAAC,MAAM,CAAC;SAChC;QACD,YAAY,EAAE,CAAC,gDAAQ,EAAE,wDAAS,EAAE,iEAAY,EAAE,2DAAU,CAAC;KAChE,CAAC;GACW,cAAc,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;ACjCuB;IAOrC,QAAQ,SAAR,QAAQ;IAEjB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEJ;;AAPY,QAAQ;IALpB,wDAAS,CAAC;QACP,QAAQ,EAAE,UAAU;QACpB,iEAA+B;;KAElC,CAAC;GACW,QAAQ,CAOpB;AAPoB;;;;;;;;;;;;;;;;;;;;;;;;;ACP6B;AACiB;AACpB;AACN;AACQ;IAOpC,UAAU,SAAV,UAAU;IAkBnB,YACW,eAAgC,EAC/B,OAAsB,EACvB,OAAuB,EACtB,MAAc;QAHf,oBAAe,GAAf,eAAe,CAAiB;QAC/B,YAAO,GAAP,OAAO,CAAe;QACvB,YAAO,GAAP,OAAO,CAAgB;QACtB,WAAM,GAAN,MAAM,CAAQ;QApB1B,eAAU,GAAW,EAAE,CAAC;QAExB,oBAAe,GAAG,aAAa,CAAC;QAEhC,cAAS,GAAG;YACR,aAAa,EAAE;gBACX,KAAK,EAAE,aAAa;aACvB;YACD,UAAU,EAAE;gBACR,KAAK,EAAE,eAAe;aACzB;YACD,cAAc,EAAE;gBACZ,KAAK,EAAE,mBAAmB;aAC7B;SACJ,CAAC;QAOE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IAC5D,CAAC;IAED,QAAQ;IACR,CAAC;IAED,QAAQ;QACJ,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,EAAE;YAC7B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,mCAAmC,EAAE,IAAI,CAAC,CAAC;SACjE;aACI;YACD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;gBAC5E,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE;oBACnB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;iBACzC;YACL,CAAC,EAAE,KAAK,CAAC,EAAE;gBACP,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IAED,WAAW;QACP,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;IACpE,CAAC;CACJ;;YAtDQ,2DAAe;YAFf,yDAAa;YADb,6EAAc;YAEd,mDAAM;;AAQF,UAAU;IALtB,wDAAS,CAAC;QACP,QAAQ,EAAE,YAAY;QACtB,mEAAiC;;KAEpC,CAAC;GACW,UAAU,CA+CtB;AA/CsB;;;;;;;;;;;;;;;;;;;;;;;;;;ACX2B;AAC+B;AAClC;AAC6B;AACnC;IAQ5B,SAAS,SAAT,SAAS;IAelB,YACY,OAAsB,EACtB,WAAgC,EAChC,WAAwB,EACxB,MAAc;QAHd,YAAO,GAAP,OAAO,CAAe;QACtB,gBAAW,GAAX,WAAW,CAAqB;QAChC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QAhB1B,iBAAY,GAAW,EAAE,CAAC;QAC1B,oBAAe,GAAG,UAAU,CAAC;QAE7B,cAAS,GAAG;YACR,UAAU,EAAE;gBACR,KAAK,EAAE,eAAe;aACzB;YACD,cAAc,EAAE;gBACZ,KAAK,EAAE,mBAAmB;aAC7B;SACJ,CAAC;QAyBF,wBAAmB,GAAG;YAClB,OAAO,EAAE;gBACL,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,oBAAoB,EAAE;gBACnD,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,iDAAiD,EAAE;aAClF;YACD,UAAU,EAAE;gBACR,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,uBAAuB,EAAE;gBACtD,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,8CAA8C,EAAE;aACjF;SACJ,CAAC;QA1BE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IAC5D,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC3C,KAAK,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,8DAAkB,CAAC;gBAC1C,+DAAmB;gBACnB,8DAAkB,CAAC,iDAAiD,CAAC;aACxE,CAAC,CAAC;YACH,QAAQ,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,8DAAkB,CAAC;gBAC7C,gEAAoB,CAAC,CAAC,CAAC;gBACvB,+DAAmB;aACtB,CAAC,CAAC;YACH,IAAI,EAAE,IAAI,CAAC,eAAe;SAC7B,CAAC,CAAC;IACP,CAAC;IAcD,SAAS,CAAC,KAAU;QAChB,uDAAuD;QACvD,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC;aAC5B,IAAI,CAAC,GAAG,CAAC,EAAE;YACR,mEAAmE;YACnE,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE;gBACnB,IAAI,GAAG,CAAC,MAAM,IAAI,SAAS,EAAE;oBACzB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;oBACnC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBACrC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;oBACvB,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;iBACzC;qBAAM;oBACH,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC;iBACnC;aACJ;QACL,CAAC,EAAE,GAAG,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;YAChD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAC5C,CAAC,CAAC;IACV,CAAC;IAED,gBAAgB;QACZ,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;IAC1E,CAAC;IACD,cAAc;QACV,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,cAAc,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;IACxE,CAAC;CAEJ;;YAxFQ,yDAAa;YACb,iFAAmB;YAFR,uDAAW;YAGtB,mDAAM;;AAQF,SAAS;IALrB,wDAAS,CAAC;QACP,QAAQ,EAAE,WAAW;QACrB,kEAAgC;;KAEnC,CAAC;GACW,SAAS,CA8ErB;AA9EqB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ4B;AAC+B;AACL;AACZ;AACG;AAC1B;IAO5B,YAAY,SAAZ,YAAY;IAkCrB,YACW,eAAgC,EAC/B,OAAsB,EACvB,OAAuB,EACtB,WAAgC,EAChC,WAAwB,EACxB,MAAc;QALf,oBAAe,GAAf,eAAe,CAAiB;QAC/B,YAAO,GAAP,OAAO,CAAe;QACvB,YAAO,GAAP,OAAO,CAAgB;QACtB,gBAAW,GAAX,WAAW,CAAqB;QAChC,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QArC1B,iBAAY,GAAW,EAAE,CAAC;QAC1B,mBAAc,GAAW,EAAE,CAAC;QAE5B,SAAI,GAAY,KAAK,CAAC;QACtB,oBAAe,GAAG,cAAc,CAAC;QAEjC,cAAS,GAAG;YACR,UAAU,EAAE;gBACR,KAAK,EAAE,eAAe;aACzB;YACD,cAAc,EAAE;gBACZ,KAAK,EAAE,mBAAmB;aAC7B;SACJ,CAAC;QAEF,wBAAmB,GAAG;YAClB,WAAW,EAAE;gBACT,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,mBAAmB,EAAE;aACrD;YACD,QAAQ,EAAE;gBACN,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,2BAA2B,EAAE;aAC7D;YACD,OAAO,EAAE;gBACL,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,oBAAoB,EAAE;gBACnD,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,sBAAsB,EAAE;aACvD;YACD,UAAU,EAAE;gBACR,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,uBAAuB,EAAE;aACzD;SACJ,CAAC;QASE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IAC5D,CAAC;IAED,QAAQ;QACJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;QAC3C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC3C,SAAS,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,8DAAkB,CAAC;gBAC9C,+DAAmB;aACtB,CAAC,CAAC;YACH,MAAM,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,8DAAkB,CAAC;gBAC3C,+DAAmB;aACtB,CAAC,CAAC;YACH,KAAK,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,8DAAkB,CAAC;gBAC1C,8DAAkB,CAAC,iDAAiD,CAAC;gBACrE,+DAAmB;aACtB,CAAC,CAAC;YACH,QAAQ,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,8DAAkB,CAAC;gBAC7C,+DAAmB;aACtB,CAAC,CAAC;YACH,IAAI,EAAE,IAAI,CAAC,eAAe;YAC1B,IAAI,EAAE,IAAI,uDAAW,EAAE;SAC1B,CAAC,CAAC;IACP,CAAC;IAED,WAAW,CAAC,KAAU;QAClB,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,oCAAoC,EAAE,IAAI,CAAC,CAAC;SAAE;aAC9F,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE,EAAE;YAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,8CAA8C,EAAE,IAAI,CAAC,CAAC;SAAE;aAC3G,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,wCAAwC,EAAE,IAAI,CAAC,CAAC;SAAE;aACtG;YACD,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC;iBAC/B,IAAI,CAAC,GAAG,CAAC,EAAE;gBACR,IAAI,GAAG,IAAI,GAAG,CAAC,MAAM,EAAE;oBACnB,IAAI,GAAG,CAAC,MAAM,IAAI,SAAS,EAAE;wBACzB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;wBACvB,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC,OAAO,CAAC;wBAClC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;wBACtC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;qBACnE;yBAAM;wBACH,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;wBACtC,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,OAAO,CAAC;wBAChC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;qBAC5B;iBACJ;YACL,CAAC,EAAE,GAAG,CAAC,EAAE;gBACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,YAAY,GAAG,sBAAsB,CAAC;gBAC3C,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YAC7B,CAAC,CAAC;SACT;IACL,CAAC;IAED,WAAW;QACP,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;IACpE,CAAC;CAEJ;;YAzGuB,2DAAe;YAA9B,yDAAa;YACb,6EAAc;YAFd,iFAAmB;YADR,uDAAW;YAItB,mDAAM;;AAOF,YAAY;IALxB,wDAAS,CAAC;QACP,QAAQ,EAAE,cAAc;QACxB,qEAAmC;;KAEtC,CAAC;GACW,YAAY,CAgGxB;AAhGwB","sources":["./src/app/auth/auth.module.ts","./src/app/auth/auth.page.ts","./src/app/auth/forget/forget.page.ts","./src/app/auth/login/login.page.ts","./src/app/auth/register/register.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\n\nimport { AuthPage } from './auth.page';\nimport { LoginPage } from './login/login.page';\nimport { RegisterPage } from './register/register.page';\nimport { ForgetPage } from './forget/forget.page';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AuthPage,\n        children: [\n            { path: 'login/:type', component: LoginPage },\n            { path: 'register/:type', component: RegisterPage },\n            { path: 'forget/:type', component: ForgetPage },\n        ]\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        IonicModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [AuthPage, LoginPage, RegisterPage, ForgetPage]\n})\nexport class AuthPageModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-auth',\n    templateUrl: './auth.page.html',\n    styleUrls: ['./auth.page.scss'],\n})\nexport class AuthPage implements OnInit {\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from 'src/app/services/rest-api.service';\nimport { NavController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n    selector: 'app-forget',\n    templateUrl: './forget.page.html',\n    styleUrls: ['./forget.page.scss'],\n})\nexport class ForgetPage implements OnInit {\n\n    user_email: string = '';\n\n    currentUserType = 'public_user';\n\n    UserTypes = {\n        'public_user': {\n            title: 'Member Area'\n        },\n        'assessor': {\n            title: 'Assessor Area'\n        },\n        'professional': {\n            title: 'Professional Area'\n        }\n    };\n\n    constructor(\n        public toastController: ToastController,\n        private navCtrl: NavController,\n        public restApi: RestApiService,\n        private router: Router) {\n        this.currentUserType = this.router.url.split('/').pop();\n    }\n\n    ngOnInit() {\n    }\n\n    sendPass() {\n        if (this.user_email.length == 0) {\n            this.restApi.toast('Please fill your eamil into Email', 1200);\n        }\n        else {\n            this.restApi.post('/forget', { email: this.user_email }).subscribe((res: any) => {\n                if (res && res.status) {\n                    this.restApi.toast(res.message, 1000);\n                }\n            }, error => {\n                this.restApi.toast('Something went wrong.', 1200);\n            });\n        }\n    }\n\n    goLoginPage() {\n        this.router.navigateByUrl('auth/login/' + this.currentUserType);\n    }\n}","import { Component, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators, FormControl } from \"@angular/forms\";\nimport { NavController } from \"@ionic/angular\";\nimport { AuthenticateService } from \"../../services/authentication.service\";\nimport { Router } from \"@angular/router\";\n\n\n@Component({\n    selector: \"app-login\",\n    templateUrl: \"./login.page.html\",\n    styleUrls: [\"./login.page.scss\"],\n})\nexport class LoginPage implements OnInit {\n\n    validations_form: FormGroup;\n    errorMessage: string = \"\";\n    currentUserType = \"assessor\";\n\n    UserTypes = {\n        \"assessor\": {\n            title: \"Assessor Area\"\n        },\n        \"professional\": {\n            title: \"Professional Area\"\n        }\n    };\n\n    constructor(\n        private navCtrl: NavController,\n        private authService: AuthenticateService,\n        private formBuilder: FormBuilder,\n        private router: Router,\n    ) {\n        this.currentUserType = this.router.url.split(\"/\").pop();\n    }\n\n    ngOnInit() {\n        this.validations_form = this.formBuilder.group({\n            email: new FormControl(\"\", Validators.compose([\n                Validators.required,\n                Validators.pattern(\"^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$\")\n            ])),\n            password: new FormControl(\"\", Validators.compose([\n                Validators.minLength(5),\n                Validators.required\n            ])),\n            role: this.currentUserType\n        });\n    }\n\n    validation_messages = {\n        \"email\": [\n            { type: \"required\", message: \"Email is required.\" },\n            { type: \"pattern\", message: \"Please enter a valid email - remove last space.\" }\n        ],\n        \"password\": [\n            { type: \"required\", message: \"Password is required.\" },\n            { type: \"minlength\", message: \"Password must be at least 5 characters long.\" }\n        ]\n    };\n\n\n    loginUser(value: any) {\n        // console.log(\"login page loginUser value : \", value);\n        this.authService.loginUser(value)\n            .then(res => {\n                // console.log(\"login page loginUser res : \", JSON.stringify(res));\n                if (res && res.status) {\n                    if (res.status == \"success\") {\n                        this.authService.setUser(res.data);\n                        this.authService.setToken(res.token);\n                        this.errorMessage = \"\";\n                        this.navCtrl.navigateForward(\"/home\");\n                    } else {\n                        this.errorMessage = res.message;\n                    }\n                }\n            }, err => {\n                console.log(\"login page loginUser err : \", err);\n                this.errorMessage = JSON.stringify(err);\n            })\n    }\n\n    goToRegisterPage() {\n        this.navCtrl.navigateForward(\"auth/register/\" + this.currentUserType);\n    }\n    goToForgetPage() {\n        this.navCtrl.navigateForward(\"auth/forget/\" + this.currentUserType);\n    }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { AuthenticateService } from '../../services/authentication.service';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { RestApiService } from 'src/app/services/rest-api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n    selector: 'app-register',\n    templateUrl: './register.page.html',\n    styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n\n    validations_form: FormGroup;\n    errorMessage: string = '';\n    successMessage: string = '';\n\n    prof: boolean = false;\n    currentUserType = 'professional';\n\n    UserTypes = {\n        'assessor': {\n            title: 'Assessor Area'\n        },\n        'professional': {\n            title: 'Professional Area'\n        }\n    };\n\n    validation_messages = {\n        'full_name': [\n            { type: 'required', message: 'Name is required.' }\n        ],\n        'mobile': [\n            { type: 'required', message: 'Phone Number is required.' }\n        ],\n        'email': [\n            { type: 'required', message: 'Email is required.' },\n            { type: 'pattern', message: 'Enter a valid email.' }\n        ],\n        'password': [\n            { type: 'required', message: 'Password is required.' }\n        ]\n    };\n\n    constructor(\n        public toastController: ToastController,\n        private navCtrl: NavController,\n        public restApi: RestApiService,\n        private authService: AuthenticateService,\n        private formBuilder: FormBuilder,\n        private router: Router) {\n        this.currentUserType = this.router.url.split('/').pop();\n    }\n\n    ngOnInit() {\n        console.log(this.currentUserType, \"+++++\");\n        this.validations_form = this.formBuilder.group({\n            full_name: new FormControl('', Validators.compose([\n                Validators.required\n            ])),\n            mobile: new FormControl('', Validators.compose([\n                Validators.required\n            ])),\n            email: new FormControl('', Validators.compose([\n                Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$'),\n                Validators.required\n            ])),\n            password: new FormControl('', Validators.compose([\n                Validators.required\n            ])),\n            role: this.currentUserType,\n            prof: new FormControl()\n        });\n    }\n\n    tryRegister(value: any) {\n        if (value.full_name.length < 5) { this.restApi.toast('Name must be longer than 5 letters', 1200); }\n        else if (value.mobile.length < 10) { this.restApi.toast('Mobile Number must be longer than 10 letters', 1200); }\n        else if (value.password.length < 5) { this.restApi.toast('Password must be longer than 5 letters', 1200); }\n        else {\n            this.authService.registerUser(value)\n                .then(res => {\n                    if (res && res.status) {\n                        if (res.status == 'success') {\n                            this.errorMessage = \"\";\n                            this.successMessage = res.message;\n                            this.restApi.toast(res.message, 1200);\n                            this.router.navigateByUrl('auth/login/' + this.currentUserType);\n                        } else {\n                            this.restApi.toast(res.message, 1200);\n                            this.errorMessage = res.message;\n                            this.successMessage = \"\";\n                        }\n                    }\n                }, err => {\n                    console.log(err);\n                    this.errorMessage = \"Something went wrong\";\n                    this.successMessage = \"\";\n                })\n        }\n    }\n\n    goLoginPage() {\n        this.router.navigateByUrl('auth/login/' + this.currentUserType);\n    }\n\n}"],"names":[],"sourceRoot":"webpack:///"}